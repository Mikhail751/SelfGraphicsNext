//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31833905
// Cuda compilation tools, release 11.8, V11.8.89
// Based on NVVM 7.0.1
//

.version 7.8
.target sm_52
.address_size 64

	// .globl	resultPixel
.func  (.param .b64 func_retval0) __internal_accurate_pow
(
	.param .b64 __internal_accurate_pow_param_0,
	.param .b64 __internal_accurate_pow_param_1
)
;
.const .align 4 .u32 CountOfTrns = 512;
.const .align 4 .b8 trPoint1[6144];
.const .align 4 .b8 trPoint2[6144];
.const .align 4 .b8 trPoint3[6144];
.const .align 4 .b8 normals[6144];
.const .align 4 .b8 dRatios[2048];
.const .align 4 .b8 colors[6144];

.visible .entry resultPixel(
	.param .u64 resultPixel_param_0,
	.param .align 4 .b8 resultPixel_param_1[12],
	.param .u32 resultPixel_param_2,
	.param .align 4 .b8 resultPixel_param_3[12],
	.param .u64 resultPixel_param_4
)
{
	.reg .pred 	%p<214>;
	.reg .b16 	%rs<11>;
	.reg .f32 	%f<204>;
	.reg .b32 	%r<197>;
	.reg .f64 	%fd<146>;
	.reg .b64 	%rd<142>;


	ld.param.u64 	%rd58, [resultPixel_param_0];
	ld.param.u32 	%r30, [resultPixel_param_2];
	ld.param.f32 	%f75, [resultPixel_param_3+8];
	ld.param.f32 	%f74, [resultPixel_param_3+4];
	ld.param.f32 	%f73, [resultPixel_param_3];
	ld.param.f32 	%f72, [resultPixel_param_1+8];
	ld.param.f32 	%f71, [resultPixel_param_1+4];
	ld.param.f32 	%f70, [resultPixel_param_1];
	mov.u32 	%r31, %ctaid.x;
	mov.u32 	%r32, %ntid.x;
	mov.u32 	%r33, %tid.x;
	mad.lo.s32 	%r1, %r32, %r31, %r33;
	setp.ge.s32 	%p8, %r1, %r30;
	@%p8 bra 	$L__BB0_119;

	cvta.to.global.u64 	%rd60, %rd58;
	mul.wide.s32 	%rd61, %r1, 12;
	add.s64 	%rd62, %rd60, %rd61;
	ld.global.f32 	%f4, [%rd62];
	ld.global.f32 	%f5, [%rd62+4];
	ld.global.f32 	%f6, [%rd62+8];
	ld.const.u32 	%r2, [CountOfTrns];
	setp.lt.s32 	%p9, %r2, 1;
	mov.f32 	%f176, 0f3F800000;
	mov.u16 	%rs8, 0;
	mov.f32 	%f180, 0f41800000;
	mov.f32 	%f179, %f180;
	mov.f32 	%f178, %f180;
	@%p9 bra 	$L__BB0_53;

	mov.f32 	%f177, 0f4B189680;
	mov.u32 	%r192, 0;
	mov.u64 	%rd129, normals;
	mov.u64 	%rd128, dRatios;
	mov.u64 	%rd127, colors;
	mov.u64 	%rd126, trPoint3;
	mov.u64 	%rd125, trPoint2;
	mov.u64 	%rd124, trPoint1;

$L__BB0_3:
	ld.const.f32 	%f18, [%rd129];
	ld.const.f32 	%f87, [%rd128];
	fma.rn.f32 	%f88, %f70, %f18, %f87;
	ld.const.f32 	%f19, [%rd129+4];
	fma.rn.f32 	%f89, %f71, %f19, %f88;
	ld.const.f32 	%f20, [%rd129+8];
	fma.rn.f32 	%f21, %f72, %f20, %f89;
	mul.f32 	%f90, %f5, %f19;
	fma.rn.f32 	%f91, %f4, %f18, %f90;
	fma.rn.f32 	%f22, %f6, %f20, %f91;
	setp.eq.f32 	%p10, %f22, 0f00000000;
	setp.ge.f32 	%p11, %f21, 0f00000000;
	and.pred  	%p12, %p10, %p11;
	@%p12 bra 	$L__BB0_52;

	div.rn.f32 	%f23, %f21, %f22;
	setp.gt.f32 	%p13, %f23, 0f80000000;
	@%p13 bra 	$L__BB0_52;

	ld.const.f32 	%f171, [%rd129];
	mul.f32 	%f92, %f4, %f23;
	sub.f32 	%f186, %f70, %f92;
	mul.f32 	%f93, %f5, %f23;
	sub.f32 	%f187, %f71, %f93;
	mul.f32 	%f94, %f6, %f23;
	sub.f32 	%f188, %f72, %f94;
	setp.neu.f32 	%p14, %f171, 0f00000000;
	@%p14 bra 	$L__BB0_9;
	bra.uni 	$L__BB0_6;

$L__BB0_9:
	add.s64 	%rd130, %rd124, 4;
	add.s64 	%rd131, %rd124, 8;
	add.s64 	%rd132, %rd125, 4;
	add.s64 	%rd133, %rd125, 8;
	add.s64 	%rd134, %rd126, 4;
	add.s64 	%rd135, %rd126, 8;
	mov.f32 	%f184, %f188;
	mov.f32 	%f185, %f187;
	bra.uni 	$L__BB0_10;

$L__BB0_6:
	cvt.s64.s32 	%rd123, %r192;
	ld.const.f32 	%f172, [%rd129+4];
	setp.neu.f32 	%p15, %f172, 0f00000000;
	mul.lo.s64 	%rd69, %rd123, 12;
	mov.u64 	%rd70, trPoint1;
	add.s64 	%rd130, %rd70, %rd69;
	mov.u64 	%rd71, trPoint2;
	add.s64 	%rd132, %rd71, %rd69;
	mov.u64 	%rd72, trPoint3;
	add.s64 	%rd134, %rd72, %rd69;
	@%p15 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;

$L__BB0_8:
	add.s64 	%rd82, %rd70, %rd69;
	add.s64 	%rd131, %rd82, 8;
	add.s64 	%rd84, %rd71, %rd69;
	add.s64 	%rd133, %rd84, 8;
	add.s64 	%rd86, %rd72, %rd69;
	add.s64 	%rd135, %rd86, 8;
	mov.f32 	%f184, %f188;
	mov.f32 	%f185, %f186;
	bra.uni 	$L__BB0_10;

$L__BB0_7:
	add.s64 	%rd75, %rd70, %rd69;
	add.s64 	%rd131, %rd75, 4;
	add.s64 	%rd77, %rd71, %rd69;
	add.s64 	%rd133, %rd77, 4;
	add.s64 	%rd79, %rd72, %rd69;
	add.s64 	%rd135, %rd79, 4;
	mov.f32 	%f184, %f187;
	mov.f32 	%f185, %f186;

$L__BB0_10:
	ld.const.f32 	%f95, [%rd130];
	sub.f32 	%f96, %f95, %f185;
	ld.const.f32 	%f97, [%rd131];
	ld.const.f32 	%f98, [%rd133];
	sub.f32 	%f99, %f98, %f97;
	mul.f32 	%f100, %f99, %f96;
	ld.const.f32 	%f101, [%rd132];
	sub.f32 	%f102, %f101, %f95;
	sub.f32 	%f103, %f97, %f184;
	mul.f32 	%f104, %f103, %f102;
	sub.f32 	%f105, %f100, %f104;
	sub.f32 	%f106, %f101, %f185;
	ld.const.f32 	%f107, [%rd135];
	sub.f32 	%f108, %f107, %f98;
	mul.f32 	%f109, %f108, %f106;
	ld.const.f32 	%f110, [%rd134];
	sub.f32 	%f111, %f110, %f101;
	sub.f32 	%f112, %f98, %f184;
	mul.f32 	%f113, %f112, %f111;
	sub.f32 	%f114, %f109, %f113;
	sub.f32 	%f115, %f110, %f185;
	sub.f32 	%f116, %f97, %f107;
	mul.f32 	%f117, %f115, %f116;
	sub.f32 	%f118, %f95, %f110;
	sub.f32 	%f119, %f107, %f184;
	mul.f32 	%f120, %f119, %f118;
	sub.f32 	%f121, %f117, %f120;
	setp.ge.f32 	%p16, %f105, 0f00000000;
	setp.ge.f32 	%p17, %f114, 0f00000000;
	and.pred  	%p18, %p17, %p16;
	setp.ge.f32 	%p19, %f121, 0f00000000;
	and.pred  	%p20, %p19, %p18;
	setp.le.f32 	%p21, %f105, 0f00000000;
	setp.le.f32 	%p22, %f114, 0f00000000;
	and.pred  	%p23, %p22, %p21;
	setp.le.f32 	%p24, %f121, 0f00000000;
	and.pred  	%p25, %p24, %p23;
	or.pred  	%p26, %p20, %p25;
	not.pred 	%p27, %p26;
	@%p27 bra 	$L__BB0_52;

	sub.f32 	%f29, %f186, %f70;
	cvt.f64.f32 	%fd1, %f29;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5}, %fd1;
	}
	mov.f64 	%fd81, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6}, %fd81;
	}
	and.b32  	%r7, %r6, 2146435072;
	setp.eq.s32 	%p28, %r7, 1062207488;
	abs.f64 	%fd2, %fd1;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd2;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd81;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd126, [retval0+0];
	} // callseq 0
	setp.lt.s32 	%p29, %r5, 0;
	and.pred  	%p1, %p29, %p28;
	not.pred 	%p30, %p1;
	@%p30 bra 	$L__BB0_13;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r37}, %fd126;
	}
	xor.b32  	%r38, %r37, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r39, %temp}, %fd126;
	}
	mov.b64 	%fd126, {%r39, %r38};

$L__BB0_13:
	setp.eq.f32 	%p31, %f29, 0f00000000;
	@%p31 bra 	$L__BB0_17;
	bra.uni 	$L__BB0_14;

$L__BB0_17:
	selp.b32 	%r40, %r5, 0, %p28;
	mov.u32 	%r41, 0;
	or.b32  	%r42, %r40, 2146435072;
	setp.lt.s32 	%p35, %r6, 0;
	selp.b32 	%r43, %r42, %r40, %p35;
	mov.b64 	%fd126, {%r41, %r43};
	bra.uni 	$L__BB0_18;

$L__BB0_14:
	setp.gt.s32 	%p32, %r5, -1;
	@%p32 bra 	$L__BB0_18;

	mov.f64 	%fd82, 0d4000000000000000;
	cvt.rzi.f64.f64 	%fd83, %fd82;
	setp.eq.f64 	%p33, %fd83, 0d4000000000000000;
	@%p33 bra 	$L__BB0_18;

	mov.f64 	%fd126, 0dFFF8000000000000;

$L__BB0_18:
	add.f64 	%fd8, %fd1, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r44}, %fd8;
	}
	and.b32  	%r45, %r44, 2146435072;
	setp.ne.s32 	%p36, %r45, 2146435072;
	mov.f64 	%fd127, %fd126;
	@%p36 bra 	$L__BB0_24;

	setp.gtu.f64 	%p37, %fd2, 0d7FF0000000000000;
	mov.f64 	%fd127, %fd8;
	@%p37 bra 	$L__BB0_24;

	mov.f64 	%fd85, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r46, %temp}, %fd85;
	}
	and.b32  	%r8, %r6, 2147483647;
	setp.eq.s32 	%p38, %r8, 2146435072;
	setp.eq.s32 	%p39, %r46, 0;
	and.pred  	%p40, %p38, %p39;
	@%p40 bra 	$L__BB0_23;
	bra.uni 	$L__BB0_21;

$L__BB0_23:
	setp.gt.f64 	%p47, %fd2, 0d3FF0000000000000;
	selp.b32 	%r53, 2146435072, 0, %p47;
	mov.u32 	%r54, 0;
	xor.b32  	%r55, %r53, 2146435072;
	setp.lt.s32 	%p48, %r6, 0;
	selp.b32 	%r56, %r55, %r53, %p48;
	setp.eq.f32 	%p49, %f29, 0fBF800000;
	selp.b32 	%r57, 1072693248, %r56, %p49;
	mov.b64 	%fd127, {%r54, %r57};
	bra.uni 	$L__BB0_24;

$L__BB0_21:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r47, %temp}, %fd1;
	}
	and.b32  	%r48, %r5, 2147483647;
	setp.ne.s32 	%p41, %r48, 2146435072;
	setp.ne.s32 	%p42, %r47, 0;
	or.pred  	%p43, %p41, %p42;
	mov.f64 	%fd127, %fd126;
	@%p43 bra 	$L__BB0_24;

	and.b32  	%r189, %r6, 2147483647;
	setp.gt.s32 	%p44, %r6, -1;
	selp.b32 	%r49, 2146435072, 0, %p44;
	mov.u32 	%r50, 0;
	setp.ne.s32 	%p45, %r189, 1071644672;
	and.pred  	%p46, %p45, %p1;
	or.b32  	%r51, %r49, -2147483648;
	selp.b32 	%r52, %r51, %r49, %p46;
	mov.b64 	%fd127, {%r50, %r52};

$L__BB0_24:
	setp.eq.f32 	%p50, %f29, 0f3F800000;
	selp.f64 	%fd12, 0d3FF0000000000000, %fd127, %p50;
	sub.f32 	%f30, %f187, %f71;
	cvt.f64.f32 	%fd13, %f30;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r9}, %fd13;
	}
	abs.f64 	%fd14, %fd13;
	mov.f64 	%fd86, 0d4000000000000000;
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd14;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd86;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd129, [retval0+0];
	} // callseq 1
	setp.lt.s32 	%p51, %r9, 0;
	and.pred  	%p2, %p51, %p28;
	not.pred 	%p53, %p2;
	@%p53 bra 	$L__BB0_26;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r58}, %fd129;
	}
	xor.b32  	%r59, %r58, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r60, %temp}, %fd129;
	}
	mov.b64 	%fd129, {%r60, %r59};

$L__BB0_26:
	setp.eq.f32 	%p54, %f30, 0f00000000;
	@%p54 bra 	$L__BB0_30;
	bra.uni 	$L__BB0_27;

$L__BB0_30:
	selp.b32 	%r61, %r9, 0, %p28;
	mov.u32 	%r62, 0;
	or.b32  	%r63, %r61, 2146435072;
	setp.lt.s32 	%p58, %r6, 0;
	selp.b32 	%r64, %r63, %r61, %p58;
	mov.b64 	%fd129, {%r62, %r64};
	bra.uni 	$L__BB0_31;

$L__BB0_27:
	setp.gt.s32 	%p55, %r9, -1;
	@%p55 bra 	$L__BB0_31;

	mov.f64 	%fd87, 0d4000000000000000;
	cvt.rzi.f64.f64 	%fd88, %fd87;
	setp.eq.f64 	%p56, %fd88, 0d4000000000000000;
	@%p56 bra 	$L__BB0_31;

	mov.f64 	%fd129, 0dFFF8000000000000;

$L__BB0_31:
	add.f64 	%fd20, %fd13, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r65}, %fd20;
	}
	and.b32  	%r66, %r65, 2146435072;
	setp.ne.s32 	%p59, %r66, 2146435072;
	mov.f64 	%fd130, %fd129;
	@%p59 bra 	$L__BB0_37;

	setp.gtu.f64 	%p60, %fd14, 0d7FF0000000000000;
	mov.f64 	%fd130, %fd20;
	@%p60 bra 	$L__BB0_37;

	mov.f64 	%fd90, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r67, %temp}, %fd90;
	}
	and.b32  	%r10, %r6, 2147483647;
	setp.eq.s32 	%p61, %r10, 2146435072;
	setp.eq.s32 	%p62, %r67, 0;
	and.pred  	%p63, %p61, %p62;
	@%p63 bra 	$L__BB0_36;
	bra.uni 	$L__BB0_34;

$L__BB0_36:
	setp.gt.f64 	%p70, %fd14, 0d3FF0000000000000;
	selp.b32 	%r74, 2146435072, 0, %p70;
	mov.u32 	%r75, 0;
	xor.b32  	%r76, %r74, 2146435072;
	setp.lt.s32 	%p71, %r6, 0;
	selp.b32 	%r77, %r76, %r74, %p71;
	setp.eq.f32 	%p72, %f30, 0fBF800000;
	selp.b32 	%r78, 1072693248, %r77, %p72;
	mov.b64 	%fd130, {%r75, %r78};
	bra.uni 	$L__BB0_37;

$L__BB0_34:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r68, %temp}, %fd13;
	}
	and.b32  	%r69, %r9, 2147483647;
	setp.ne.s32 	%p64, %r69, 2146435072;
	setp.ne.s32 	%p65, %r68, 0;
	or.pred  	%p66, %p64, %p65;
	mov.f64 	%fd130, %fd129;
	@%p66 bra 	$L__BB0_37;

	and.b32  	%r190, %r6, 2147483647;
	setp.gt.s32 	%p67, %r6, -1;
	selp.b32 	%r70, 2146435072, 0, %p67;
	mov.u32 	%r71, 0;
	setp.ne.s32 	%p68, %r190, 1071644672;
	and.pred  	%p69, %p68, %p2;
	or.b32  	%r72, %r70, -2147483648;
	selp.b32 	%r73, %r72, %r70, %p69;
	mov.b64 	%fd130, {%r71, %r73};

$L__BB0_37:
	setp.eq.f32 	%p73, %f30, 0f3F800000;
	selp.f64 	%fd91, 0d3FF0000000000000, %fd130, %p73;
	add.f64 	%fd24, %fd12, %fd91;
	sub.f32 	%f31, %f188, %f72;
	cvt.f64.f32 	%fd25, %f31;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r11}, %fd25;
	}
	abs.f64 	%fd26, %fd25;
	mov.f64 	%fd92, 0d4000000000000000;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd26;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd92;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd132, [retval0+0];
	} // callseq 2
	setp.lt.s32 	%p74, %r11, 0;
	and.pred  	%p3, %p74, %p28;
	not.pred 	%p76, %p3;
	@%p76 bra 	$L__BB0_39;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r79}, %fd132;
	}
	xor.b32  	%r80, %r79, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r81, %temp}, %fd132;
	}
	mov.b64 	%fd132, {%r81, %r80};

$L__BB0_39:
	setp.eq.f32 	%p77, %f31, 0f00000000;
	@%p77 bra 	$L__BB0_43;
	bra.uni 	$L__BB0_40;

$L__BB0_43:
	selp.b32 	%r82, %r11, 0, %p28;
	mov.u32 	%r83, 0;
	or.b32  	%r84, %r82, 2146435072;
	setp.lt.s32 	%p81, %r6, 0;
	selp.b32 	%r85, %r84, %r82, %p81;
	mov.b64 	%fd132, {%r83, %r85};
	bra.uni 	$L__BB0_44;

$L__BB0_40:
	setp.gt.s32 	%p78, %r11, -1;
	@%p78 bra 	$L__BB0_44;

	mov.f64 	%fd93, 0d4000000000000000;
	cvt.rzi.f64.f64 	%fd94, %fd93;
	setp.eq.f64 	%p79, %fd94, 0d4000000000000000;
	@%p79 bra 	$L__BB0_44;

	mov.f64 	%fd132, 0dFFF8000000000000;

$L__BB0_44:
	add.f64 	%fd32, %fd25, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r86}, %fd32;
	}
	and.b32  	%r87, %r86, 2146435072;
	setp.ne.s32 	%p82, %r87, 2146435072;
	mov.f64 	%fd133, %fd132;
	@%p82 bra 	$L__BB0_50;

	setp.gtu.f64 	%p83, %fd26, 0d7FF0000000000000;
	mov.f64 	%fd133, %fd32;
	@%p83 bra 	$L__BB0_50;

	mov.f64 	%fd96, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r88, %temp}, %fd96;
	}
	and.b32  	%r12, %r6, 2147483647;
	setp.eq.s32 	%p84, %r12, 2146435072;
	setp.eq.s32 	%p85, %r88, 0;
	and.pred  	%p86, %p84, %p85;
	@%p86 bra 	$L__BB0_49;
	bra.uni 	$L__BB0_47;

$L__BB0_49:
	setp.gt.f64 	%p93, %fd26, 0d3FF0000000000000;
	selp.b32 	%r95, 2146435072, 0, %p93;
	mov.u32 	%r96, 0;
	xor.b32  	%r97, %r95, 2146435072;
	setp.lt.s32 	%p94, %r6, 0;
	selp.b32 	%r98, %r97, %r95, %p94;
	setp.eq.f32 	%p95, %f31, 0fBF800000;
	selp.b32 	%r99, 1072693248, %r98, %p95;
	mov.b64 	%fd133, {%r96, %r99};
	bra.uni 	$L__BB0_50;

$L__BB0_47:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r89, %temp}, %fd25;
	}
	and.b32  	%r90, %r11, 2147483647;
	setp.ne.s32 	%p87, %r90, 2146435072;
	setp.ne.s32 	%p88, %r89, 0;
	or.pred  	%p89, %p87, %p88;
	mov.f64 	%fd133, %fd132;
	@%p89 bra 	$L__BB0_50;

	and.b32  	%r191, %r6, 2147483647;
	setp.gt.s32 	%p90, %r6, -1;
	selp.b32 	%r91, 2146435072, 0, %p90;
	mov.u32 	%r92, 0;
	setp.ne.s32 	%p91, %r191, 1071644672;
	and.pred  	%p92, %p91, %p3;
	or.b32  	%r93, %r91, -2147483648;
	selp.b32 	%r94, %r93, %r91, %p92;
	mov.b64 	%fd133, {%r92, %r94};

$L__BB0_50:
	setp.eq.f32 	%p96, %f31, 0f3F800000;
	selp.f64 	%fd97, 0d3FF0000000000000, %fd133, %p96;
	add.f64 	%fd98, %fd24, %fd97;
	sqrt.rn.f64 	%fd99, %fd98;
	cvt.rn.f32.f64 	%f32, %fd99;
	setp.leu.f32 	%p97, %f177, %f32;
	@%p97 bra 	$L__BB0_52;

	ld.const.f32 	%f175, [%rd129+8];
	ld.const.f32 	%f174, [%rd129+4];
	ld.const.f32 	%f173, [%rd129];
	sub.f32 	%f122, %f73, %f186;
	sub.f32 	%f123, %f74, %f187;
	mul.f32 	%f124, %f174, %f123;
	fma.rn.f32 	%f125, %f173, %f122, %f124;
	sub.f32 	%f126, %f75, %f188;
	fma.rn.f32 	%f127, %f175, %f126, %f125;
	setp.lt.f32 	%p98, %f127, 0f00000000;
	selp.f32 	%f176, 0f00000000, %f127, %p98;
	ld.const.f32 	%f180, [%rd127];
	ld.const.f32 	%f179, [%rd127+4];
	ld.const.f32 	%f178, [%rd127+8];
	mov.u16 	%rs8, 1;
	mov.f32 	%f177, %f32;
	mov.u32 	%r193, %r192;

$L__BB0_52:
	add.s64 	%rd129, %rd129, 12;
	add.s64 	%rd128, %rd128, 4;
	add.s64 	%rd127, %rd127, 12;
	add.s64 	%rd126, %rd126, 12;
	add.s64 	%rd125, %rd125, 12;
	add.s64 	%rd124, %rd124, 12;
	add.s32 	%r192, %r192, 1;
	setp.lt.s32 	%p99, %r192, %r2;
	@%p99 bra 	$L__BB0_3;

$L__BB0_53:
	and.b16  	%rs7, %rs8, 255;
	setp.eq.s16 	%p100, %rs7, 0;
	mov.f32 	%f203, %f176;
	@%p100 bra 	$L__BB0_105;

	sub.f32 	%f52, %f73, %f186;
	sub.f32 	%f53, %f74, %f187;
	sub.f32 	%f54, %f75, %f188;
	cvt.f64.f32 	%fd36, %f52;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r16}, %fd36;
	}
	mov.f64 	%fd100, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r17}, %fd100;
	}
	and.b32  	%r18, %r17, 2146435072;
	setp.eq.s32 	%p101, %r18, 1062207488;
	abs.f64 	%fd37, %fd36;
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd37;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd100;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd135, [retval0+0];
	} // callseq 3
	setp.lt.s32 	%p102, %r16, 0;
	and.pred  	%p4, %p102, %p101;
	not.pred 	%p103, %p4;
	@%p103 bra 	$L__BB0_56;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r100}, %fd135;
	}
	xor.b32  	%r101, %r100, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r102, %temp}, %fd135;
	}
	mov.b64 	%fd135, {%r102, %r101};

$L__BB0_56:
	setp.eq.f32 	%p104, %f52, 0f00000000;
	@%p104 bra 	$L__BB0_60;
	bra.uni 	$L__BB0_57;

$L__BB0_60:
	selp.b32 	%r103, %r16, 0, %p101;
	mov.u32 	%r104, 0;
	or.b32  	%r105, %r103, 2146435072;
	setp.lt.s32 	%p108, %r17, 0;
	selp.b32 	%r106, %r105, %r103, %p108;
	mov.b64 	%fd135, {%r104, %r106};
	bra.uni 	$L__BB0_61;

$L__BB0_57:
	setp.gt.s32 	%p105, %r16, -1;
	@%p105 bra 	$L__BB0_61;

	mov.f64 	%fd101, 0d4000000000000000;
	cvt.rzi.f64.f64 	%fd102, %fd101;
	setp.eq.f64 	%p106, %fd102, 0d4000000000000000;
	@%p106 bra 	$L__BB0_61;

	mov.f64 	%fd135, 0dFFF8000000000000;

$L__BB0_61:
	add.f64 	%fd43, %fd36, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r107}, %fd43;
	}
	and.b32  	%r108, %r107, 2146435072;
	setp.ne.s32 	%p109, %r108, 2146435072;
	mov.f64 	%fd136, %fd135;
	@%p109 bra 	$L__BB0_67;

	setp.gtu.f64 	%p110, %fd37, 0d7FF0000000000000;
	mov.f64 	%fd136, %fd43;
	@%p110 bra 	$L__BB0_67;

	mov.f64 	%fd104, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r109, %temp}, %fd104;
	}
	and.b32  	%r19, %r17, 2147483647;
	setp.eq.s32 	%p111, %r19, 2146435072;
	setp.eq.s32 	%p112, %r109, 0;
	and.pred  	%p113, %p111, %p112;
	@%p113 bra 	$L__BB0_66;
	bra.uni 	$L__BB0_64;

$L__BB0_66:
	setp.gt.f64 	%p120, %fd37, 0d3FF0000000000000;
	selp.b32 	%r116, 2146435072, 0, %p120;
	mov.u32 	%r117, 0;
	xor.b32  	%r118, %r116, 2146435072;
	setp.lt.s32 	%p121, %r17, 0;
	selp.b32 	%r119, %r118, %r116, %p121;
	setp.eq.f32 	%p122, %f52, 0fBF800000;
	selp.b32 	%r120, 1072693248, %r119, %p122;
	mov.b64 	%fd136, {%r117, %r120};
	bra.uni 	$L__BB0_67;

$L__BB0_64:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r110, %temp}, %fd36;
	}
	and.b32  	%r111, %r16, 2147483647;
	setp.ne.s32 	%p114, %r111, 2146435072;
	setp.ne.s32 	%p115, %r110, 0;
	or.pred  	%p116, %p114, %p115;
	mov.f64 	%fd136, %fd135;
	@%p116 bra 	$L__BB0_67;

	setp.gt.s32 	%p117, %r17, -1;
	selp.b32 	%r112, 2146435072, 0, %p117;
	mov.u32 	%r113, 0;
	setp.ne.s32 	%p118, %r19, 1071644672;
	and.pred  	%p119, %p118, %p4;
	or.b32  	%r114, %r112, -2147483648;
	selp.b32 	%r115, %r114, %r112, %p119;
	mov.b64 	%fd136, {%r113, %r115};

$L__BB0_67:
	cvt.f64.f32 	%fd47, %f53;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd47;
	}
	abs.f64 	%fd48, %fd47;
	mov.f64 	%fd105, 0d4000000000000000;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd48;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd105;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd138, [retval0+0];
	} // callseq 4
	setp.lt.s32 	%p123, %r20, 0;
	and.pred  	%p5, %p123, %p101;
	not.pred 	%p125, %p5;
	@%p125 bra 	$L__BB0_69;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r121}, %fd138;
	}
	xor.b32  	%r122, %r121, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r123, %temp}, %fd138;
	}
	mov.b64 	%fd138, {%r123, %r122};

$L__BB0_69:
	setp.eq.f32 	%p126, %f53, 0f00000000;
	@%p126 bra 	$L__BB0_73;
	bra.uni 	$L__BB0_70;

$L__BB0_73:
	selp.b32 	%r124, %r20, 0, %p101;
	mov.u32 	%r125, 0;
	or.b32  	%r126, %r124, 2146435072;
	setp.lt.s32 	%p130, %r17, 0;
	selp.b32 	%r127, %r126, %r124, %p130;
	mov.b64 	%fd138, {%r125, %r127};
	bra.uni 	$L__BB0_74;

$L__BB0_70:
	setp.gt.s32 	%p127, %r20, -1;
	@%p127 bra 	$L__BB0_74;

	mov.f64 	%fd106, 0d4000000000000000;
	cvt.rzi.f64.f64 	%fd107, %fd106;
	setp.eq.f64 	%p128, %fd107, 0d4000000000000000;
	@%p128 bra 	$L__BB0_74;

	mov.f64 	%fd138, 0dFFF8000000000000;

$L__BB0_74:
	add.f64 	%fd54, %fd47, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r128}, %fd54;
	}
	and.b32  	%r129, %r128, 2146435072;
	setp.ne.s32 	%p131, %r129, 2146435072;
	mov.f64 	%fd139, %fd138;
	@%p131 bra 	$L__BB0_80;

	setp.gtu.f64 	%p132, %fd48, 0d7FF0000000000000;
	mov.f64 	%fd139, %fd54;
	@%p132 bra 	$L__BB0_80;

	mov.f64 	%fd109, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r130, %temp}, %fd109;
	}
	and.b32  	%r21, %r17, 2147483647;
	setp.eq.s32 	%p133, %r21, 2146435072;
	setp.eq.s32 	%p134, %r130, 0;
	and.pred  	%p135, %p133, %p134;
	@%p135 bra 	$L__BB0_79;
	bra.uni 	$L__BB0_77;

$L__BB0_79:
	setp.gt.f64 	%p142, %fd48, 0d3FF0000000000000;
	selp.b32 	%r137, 2146435072, 0, %p142;
	mov.u32 	%r138, 0;
	xor.b32  	%r139, %r137, 2146435072;
	setp.lt.s32 	%p143, %r17, 0;
	selp.b32 	%r140, %r139, %r137, %p143;
	setp.eq.f32 	%p144, %f53, 0fBF800000;
	selp.b32 	%r141, 1072693248, %r140, %p144;
	mov.b64 	%fd139, {%r138, %r141};
	bra.uni 	$L__BB0_80;

$L__BB0_77:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r131, %temp}, %fd47;
	}
	and.b32  	%r132, %r20, 2147483647;
	setp.ne.s32 	%p136, %r132, 2146435072;
	setp.ne.s32 	%p137, %r131, 0;
	or.pred  	%p138, %p136, %p137;
	mov.f64 	%fd139, %fd138;
	@%p138 bra 	$L__BB0_80;

	setp.gt.s32 	%p139, %r17, -1;
	selp.b32 	%r133, 2146435072, 0, %p139;
	mov.u32 	%r134, 0;
	setp.ne.s32 	%p140, %r21, 1071644672;
	and.pred  	%p141, %p140, %p5;
	or.b32  	%r135, %r133, -2147483648;
	selp.b32 	%r136, %r135, %r133, %p141;
	mov.b64 	%fd139, {%r134, %r136};

$L__BB0_80:
	setp.eq.f32 	%p145, %f53, 0f3F800000;
	selp.f64 	%fd110, 0d3FF0000000000000, %fd139, %p145;
	setp.eq.f32 	%p146, %f52, 0f3F800000;
	selp.f64 	%fd111, 0d3FF0000000000000, %fd136, %p146;
	add.f64 	%fd58, %fd111, %fd110;
	cvt.f64.f32 	%fd59, %f54;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r22}, %fd59;
	}
	abs.f64 	%fd60, %fd59;
	mov.f64 	%fd112, 0d4000000000000000;
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd60;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd112;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd141, [retval0+0];
	} // callseq 5
	setp.lt.s32 	%p147, %r22, 0;
	and.pred  	%p6, %p147, %p101;
	not.pred 	%p149, %p6;
	@%p149 bra 	$L__BB0_82;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r142}, %fd141;
	}
	xor.b32  	%r143, %r142, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r144, %temp}, %fd141;
	}
	mov.b64 	%fd141, {%r144, %r143};

$L__BB0_82:
	setp.eq.f32 	%p150, %f54, 0f00000000;
	@%p150 bra 	$L__BB0_86;
	bra.uni 	$L__BB0_83;

$L__BB0_86:
	selp.b32 	%r145, %r22, 0, %p101;
	mov.u32 	%r146, 0;
	or.b32  	%r147, %r145, 2146435072;
	setp.lt.s32 	%p154, %r17, 0;
	selp.b32 	%r148, %r147, %r145, %p154;
	mov.b64 	%fd141, {%r146, %r148};
	bra.uni 	$L__BB0_87;

$L__BB0_83:
	setp.gt.s32 	%p151, %r22, -1;
	@%p151 bra 	$L__BB0_87;

	mov.f64 	%fd113, 0d4000000000000000;
	cvt.rzi.f64.f64 	%fd114, %fd113;
	setp.eq.f64 	%p152, %fd114, 0d4000000000000000;
	@%p152 bra 	$L__BB0_87;

	mov.f64 	%fd141, 0dFFF8000000000000;

$L__BB0_87:
	add.f64 	%fd66, %fd59, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r149}, %fd66;
	}
	and.b32  	%r150, %r149, 2146435072;
	setp.ne.s32 	%p155, %r150, 2146435072;
	mov.f64 	%fd142, %fd141;
	@%p155 bra 	$L__BB0_93;

	setp.gtu.f64 	%p156, %fd60, 0d7FF0000000000000;
	mov.f64 	%fd142, %fd66;
	@%p156 bra 	$L__BB0_93;

	mov.f64 	%fd116, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r151, %temp}, %fd116;
	}
	and.b32  	%r23, %r17, 2147483647;
	setp.eq.s32 	%p157, %r23, 2146435072;
	setp.eq.s32 	%p158, %r151, 0;
	and.pred  	%p159, %p157, %p158;
	@%p159 bra 	$L__BB0_92;
	bra.uni 	$L__BB0_90;

$L__BB0_92:
	setp.gt.f64 	%p166, %fd60, 0d3FF0000000000000;
	selp.b32 	%r158, 2146435072, 0, %p166;
	mov.u32 	%r159, 0;
	xor.b32  	%r160, %r158, 2146435072;
	setp.lt.s32 	%p167, %r17, 0;
	selp.b32 	%r161, %r160, %r158, %p167;
	setp.eq.f32 	%p168, %f54, 0fBF800000;
	selp.b32 	%r162, 1072693248, %r161, %p168;
	mov.b64 	%fd142, {%r159, %r162};
	bra.uni 	$L__BB0_93;

$L__BB0_90:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r152, %temp}, %fd59;
	}
	and.b32  	%r153, %r22, 2147483647;
	setp.ne.s32 	%p160, %r153, 2146435072;
	setp.ne.s32 	%p161, %r152, 0;
	or.pred  	%p162, %p160, %p161;
	mov.f64 	%fd142, %fd141;
	@%p162 bra 	$L__BB0_93;

	setp.gt.s32 	%p163, %r17, -1;
	selp.b32 	%r154, 2146435072, 0, %p163;
	mov.u32 	%r155, 0;
	setp.ne.s32 	%p164, %r23, 1071644672;
	and.pred  	%p165, %p164, %p6;
	or.b32  	%r156, %r154, -2147483648;
	selp.b32 	%r157, %r156, %r154, %p165;
	mov.b64 	%fd142, {%r155, %r157};

$L__BB0_93:
	setp.lt.s32 	%p213, %r2, 1;
	setp.eq.f32 	%p169, %f54, 0f3F800000;
	selp.f64 	%fd117, 0d3FF0000000000000, %fd142, %p169;
	add.f64 	%fd118, %fd58, %fd117;
	sqrt.rn.f64 	%fd119, %fd118;
	cvt.rn.f32.f64 	%f128, %fd119;
	div.rn.f32 	%f55, %f52, %f128;
	div.rn.f32 	%f56, %f53, %f128;
	div.rn.f32 	%f57, %f54, %f128;
	mov.f32 	%f203, %f176;
	@%p213 bra 	$L__BB0_105;

	mov.u32 	%r196, 0;
	mov.u64 	%rd88, normals;
	mov.u64 	%rd91, dRatios;
	mov.u64 	%rd112, trPoint1;
	mov.u64 	%rd114, trPoint2;

$L__BB0_95:
	setp.eq.s32 	%p171, %r196, %r193;
	@%p171 bra 	$L__BB0_104;

	cvt.s64.s32 	%rd36, %r196;
	mul.wide.s32 	%rd87, %r196, 12;
	add.s64 	%rd89, %rd88, %rd87;
	mul.wide.s32 	%rd90, %r196, 4;
	add.s64 	%rd92, %rd91, %rd90;
	ld.const.f32 	%f58, [%rd89];
	ld.const.f32 	%f129, [%rd92];
	fma.rn.f32 	%f130, %f186, %f58, %f129;
	ld.const.f32 	%f59, [%rd89+4];
	fma.rn.f32 	%f131, %f187, %f59, %f130;
	ld.const.f32 	%f132, [%rd89+8];
	fma.rn.f32 	%f60, %f188, %f132, %f131;
	mul.f32 	%f133, %f56, %f59;
	fma.rn.f32 	%f134, %f55, %f58, %f133;
	fma.rn.f32 	%f61, %f57, %f132, %f134;
	setp.eq.f32 	%p172, %f61, 0f00000000;
	setp.ge.f32 	%p173, %f60, 0f00000000;
	and.pred  	%p174, %p172, %p173;
	@%p174 bra 	$L__BB0_104;

	div.rn.f32 	%f62, %f60, %f61;
	setp.gt.f32 	%p175, %f62, 0f80000000;
	@%p175 bra 	$L__BB0_104;

	mul.f32 	%f135, %f55, %f62;
	sub.f32 	%f202, %f186, %f135;
	mul.f32 	%f136, %f56, %f62;
	sub.f32 	%f64, %f187, %f136;
	mul.f32 	%f137, %f57, %f62;
	sub.f32 	%f201, %f188, %f137;
	setp.neu.f32 	%p176, %f58, 0f00000000;
	@%p176 bra 	$L__BB0_102;
	bra.uni 	$L__BB0_99;

$L__BB0_102:
	mul.lo.s64 	%rd111, %rd36, 12;
	add.s64 	%rd113, %rd112, %rd111;
	add.s64 	%rd136, %rd113, 4;
	add.s64 	%rd137, %rd113, 8;
	add.s64 	%rd115, %rd114, %rd111;
	add.s64 	%rd138, %rd115, 4;
	add.s64 	%rd139, %rd115, 8;
	mov.u64 	%rd116, trPoint3;
	add.s64 	%rd117, %rd116, %rd111;
	add.s64 	%rd140, %rd117, 4;
	add.s64 	%rd141, %rd117, 8;
	mov.f32 	%f202, %f64;
	bra.uni 	$L__BB0_103;

$L__BB0_99:
	setp.neu.f32 	%p177, %f59, 0f00000000;
	mul.lo.s64 	%rd93, %rd36, 12;
	add.s64 	%rd136, %rd112, %rd93;
	add.s64 	%rd138, %rd114, %rd93;
	mov.u64 	%rd96, trPoint3;
	add.s64 	%rd140, %rd96, %rd93;
	@%p177 bra 	$L__BB0_101;
	bra.uni 	$L__BB0_100;

$L__BB0_101:
	add.s64 	%rd106, %rd112, %rd93;
	add.s64 	%rd137, %rd106, 8;
	add.s64 	%rd108, %rd114, %rd93;
	add.s64 	%rd139, %rd108, 8;
	add.s64 	%rd110, %rd96, %rd93;
	add.s64 	%rd141, %rd110, 8;
	bra.uni 	$L__BB0_103;

$L__BB0_100:
	add.s64 	%rd99, %rd112, %rd93;
	add.s64 	%rd137, %rd99, 4;
	add.s64 	%rd101, %rd114, %rd93;
	add.s64 	%rd139, %rd101, 4;
	add.s64 	%rd103, %rd96, %rd93;
	add.s64 	%rd141, %rd103, 4;
	mov.f32 	%f201, %f64;

$L__BB0_103:
	ld.const.f32 	%f139, [%rd136];
	sub.f32 	%f140, %f139, %f202;
	ld.const.f32 	%f141, [%rd137];
	ld.const.f32 	%f142, [%rd139];
	sub.f32 	%f143, %f142, %f141;
	mul.f32 	%f144, %f143, %f140;
	ld.const.f32 	%f145, [%rd138];
	sub.f32 	%f146, %f145, %f139;
	sub.f32 	%f147, %f141, %f201;
	mul.f32 	%f148, %f147, %f146;
	sub.f32 	%f149, %f144, %f148;
	sub.f32 	%f150, %f145, %f202;
	ld.const.f32 	%f151, [%rd141];
	sub.f32 	%f152, %f151, %f142;
	mul.f32 	%f153, %f152, %f150;
	ld.const.f32 	%f154, [%rd140];
	sub.f32 	%f155, %f154, %f145;
	sub.f32 	%f156, %f142, %f201;
	mul.f32 	%f157, %f156, %f155;
	sub.f32 	%f158, %f153, %f157;
	sub.f32 	%f159, %f154, %f202;
	sub.f32 	%f160, %f141, %f151;
	mul.f32 	%f161, %f159, %f160;
	sub.f32 	%f162, %f139, %f154;
	sub.f32 	%f163, %f151, %f201;
	mul.f32 	%f164, %f163, %f162;
	sub.f32 	%f165, %f161, %f164;
	setp.ge.f32 	%p178, %f149, 0f00000000;
	mov.f32 	%f203, 0f00000000;
	setp.ge.f32 	%p179, %f158, 0f00000000;
	and.pred  	%p180, %p179, %p178;
	setp.ge.f32 	%p181, %f165, 0f00000000;
	and.pred  	%p182, %p181, %p180;
	setp.le.f32 	%p183, %f149, 0f00000000;
	setp.le.f32 	%p184, %f158, 0f00000000;
	and.pred  	%p185, %p184, %p183;
	setp.le.f32 	%p186, %f165, 0f00000000;
	and.pred  	%p187, %p186, %p185;
	or.pred  	%p188, %p182, %p187;
	@%p188 bra 	$L__BB0_105;

$L__BB0_104:
	add.s32 	%r196, %r196, 1;
	setp.lt.s32 	%p189, %r196, %r2;
	mov.f32 	%f203, %f176;
	@%p189 bra 	$L__BB0_95;

$L__BB0_105:
	abs.f32 	%f69, %f203;
	cvt.f64.f32 	%fd70, %f69;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r26}, %fd70;
	}
	mov.f64 	%fd120, 0d3FD3333333333333;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r27}, %fd120;
	}
	and.b32  	%r28, %r27, 2146435072;
	setp.eq.s32 	%p190, %r28, 1127219200;
	abs.f64 	%fd71, %fd70;
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd71;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd120;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd144, [retval0+0];
	} // callseq 6
	setp.lt.s32 	%p191, %r26, 0;
	and.pred  	%p7, %p191, %p190;
	not.pred 	%p192, %p7;
	@%p192 bra 	$L__BB0_107;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r164}, %fd144;
	}
	xor.b32  	%r165, %r164, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r166, %temp}, %fd144;
	}
	mov.b64 	%fd144, {%r166, %r165};

$L__BB0_107:
	setp.eq.f32 	%p193, %f69, 0f00000000;
	@%p193 bra 	$L__BB0_111;
	bra.uni 	$L__BB0_108;

$L__BB0_111:
	selp.b32 	%r167, %r26, 0, %p190;
	mov.u32 	%r168, 0;
	or.b32  	%r169, %r167, 2146435072;
	setp.lt.s32 	%p197, %r27, 0;
	selp.b32 	%r170, %r169, %r167, %p197;
	mov.b64 	%fd144, {%r168, %r170};
	bra.uni 	$L__BB0_112;

$L__BB0_108:
	setp.gt.s32 	%p194, %r26, -1;
	@%p194 bra 	$L__BB0_112;

	mov.f64 	%fd121, 0d3FD3333333333333;
	cvt.rzi.f64.f64 	%fd122, %fd121;
	setp.eq.f64 	%p195, %fd122, 0d3FD3333333333333;
	@%p195 bra 	$L__BB0_112;

	mov.f64 	%fd144, 0dFFF8000000000000;

$L__BB0_112:
	add.f64 	%fd77, %fd70, 0d3FD3333333333333;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r171}, %fd77;
	}
	and.b32  	%r172, %r171, 2146435072;
	setp.ne.s32 	%p198, %r172, 2146435072;
	mov.f64 	%fd145, %fd144;
	@%p198 bra 	$L__BB0_118;

	setp.gtu.f64 	%p199, %fd71, 0d7FF0000000000000;
	mov.f64 	%fd145, %fd77;
	@%p199 bra 	$L__BB0_118;

	mov.f64 	%fd124, 0d3FD3333333333333;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r173, %temp}, %fd124;
	}
	and.b32  	%r29, %r27, 2147483647;
	setp.eq.s32 	%p200, %r29, 2146435072;
	setp.eq.s32 	%p201, %r173, 0;
	and.pred  	%p202, %p200, %p201;
	@%p202 bra 	$L__BB0_117;
	bra.uni 	$L__BB0_115;

$L__BB0_117:
	setp.gt.f64 	%p209, %fd71, 0d3FF0000000000000;
	selp.b32 	%r180, 2146435072, 0, %p209;
	mov.u32 	%r181, 0;
	xor.b32  	%r182, %r180, 2146435072;
	setp.lt.s32 	%p210, %r27, 0;
	selp.b32 	%r183, %r182, %r180, %p210;
	setp.eq.f32 	%p211, %f69, 0fBF800000;
	selp.b32 	%r184, 1072693248, %r183, %p211;
	mov.b64 	%fd145, {%r181, %r184};
	bra.uni 	$L__BB0_118;

$L__BB0_115:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r174, %temp}, %fd70;
	}
	and.b32  	%r175, %r26, 2147483647;
	setp.ne.s32 	%p203, %r175, 2146435072;
	setp.ne.s32 	%p204, %r174, 0;
	or.pred  	%p205, %p203, %p204;
	mov.f64 	%fd145, %fd144;
	@%p205 bra 	$L__BB0_118;

	setp.gt.s32 	%p206, %r27, -1;
	selp.b32 	%r176, 2146435072, 0, %p206;
	mov.u32 	%r177, 0;
	setp.ne.s32 	%p207, %r29, 1071644672;
	and.pred  	%p208, %p207, %p7;
	or.b32  	%r178, %r176, -2147483648;
	selp.b32 	%r179, %r178, %r176, %p208;
	mov.b64 	%fd145, {%r177, %r179};

$L__BB0_118:
	mov.u32 	%r188, %tid.x;
	mov.u32 	%r187, %ctaid.x;
	mov.u32 	%r186, %ntid.x;
	mad.lo.s32 	%r185, %r186, %r187, %r188;
	cvt.s64.s32 	%rd122, %r185;
	ld.param.u64 	%rd121, [resultPixel_param_4];
	cvt.rn.f32.f64 	%f166, %fd145;
	setp.eq.f32 	%p212, %f69, 0f3F800000;
	selp.f32 	%f167, 0f3F800000, %f166, %p212;
	mul.f32 	%f168, %f180, %f167;
	mul.f32 	%f169, %f179, %f167;
	mul.f32 	%f170, %f178, %f167;
	cvta.to.global.u64 	%rd118, %rd121;
	mul.lo.s64 	%rd119, %rd122, 12;
	add.s64 	%rd120, %rd118, %rd119;
	st.global.f32 	[%rd120], %f168;
	st.global.f32 	[%rd120+4], %f169;
	st.global.f32 	[%rd120+8], %f170;

$L__BB0_119:
	ret;

}
.func  (.param .b64 func_retval0) __internal_accurate_pow(
	.param .b64 __internal_accurate_pow_param_0,
	.param .b64 __internal_accurate_pow_param_1
)
{
	.reg .pred 	%p<10>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<53>;
	.reg .f64 	%fd<138>;


	ld.param.f64 	%fd12, [__internal_accurate_pow_param_0];
	ld.param.f64 	%fd13, [__internal_accurate_pow_param_1];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd12;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd12;
	}
	shr.u32 	%r51, %r50, 20;
	setp.ne.s32 	%p1, %r51, 0;
	@%p1 bra 	$L__BB1_2;

	mul.f64 	%fd14, %fd12, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd14;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd14;
	}
	shr.u32 	%r16, %r50, 20;
	add.s32 	%r51, %r16, -54;

$L__BB1_2:
	add.s32 	%r52, %r51, -1023;
	and.b32  	%r17, %r50, -2146435073;
	or.b32  	%r18, %r17, 1072693248;
	mov.b64 	%fd135, {%r49, %r18};
	setp.lt.u32 	%p2, %r18, 1073127583;
	@%p2 bra 	$L__BB1_4;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r19, %temp}, %fd135;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd135;
	}
	add.s32 	%r21, %r20, -1048576;
	mov.b64 	%fd135, {%r19, %r21};
	add.s32 	%r52, %r51, -1022;

$L__BB1_4:
	add.f64 	%fd15, %fd135, 0d3FF0000000000000;
	mov.f64 	%fd16, 0d3FF0000000000000;
	rcp.approx.ftz.f64 	%fd17, %fd15;
	neg.f64 	%fd18, %fd15;
	fma.rn.f64 	%fd19, %fd18, %fd17, %fd16;
	fma.rn.f64 	%fd20, %fd19, %fd19, %fd19;
	fma.rn.f64 	%fd21, %fd20, %fd17, %fd17;
	add.f64 	%fd22, %fd135, 0dBFF0000000000000;
	mul.f64 	%fd23, %fd22, %fd21;
	fma.rn.f64 	%fd24, %fd22, %fd21, %fd23;
	mul.f64 	%fd25, %fd24, %fd24;
	mov.f64 	%fd26, 0d3ED0F5D241AD3B5A;
	mov.f64 	%fd27, 0d3EB0F5FF7D2CAFE2;
	fma.rn.f64 	%fd28, %fd27, %fd25, %fd26;
	mov.f64 	%fd29, 0d3EF3B20A75488A3F;
	fma.rn.f64 	%fd30, %fd28, %fd25, %fd29;
	mov.f64 	%fd31, 0d3F1745CDE4FAECD5;
	fma.rn.f64 	%fd32, %fd30, %fd25, %fd31;
	mov.f64 	%fd33, 0d3F3C71C7258A578B;
	fma.rn.f64 	%fd34, %fd32, %fd25, %fd33;
	mov.f64 	%fd35, 0d3F6249249242B910;
	fma.rn.f64 	%fd36, %fd34, %fd25, %fd35;
	mov.f64 	%fd37, 0d3F89999999999DFB;
	fma.rn.f64 	%fd38, %fd36, %fd25, %fd37;
	sub.f64 	%fd39, %fd22, %fd24;
	add.f64 	%fd40, %fd39, %fd39;
	neg.f64 	%fd41, %fd24;
	fma.rn.f64 	%fd42, %fd41, %fd22, %fd40;
	mul.f64 	%fd43, %fd21, %fd42;
	fma.rn.f64 	%fd44, %fd25, %fd38, 0d3FB5555555555555;
	mov.f64 	%fd45, 0d3FB5555555555555;
	sub.f64 	%fd46, %fd45, %fd44;
	fma.rn.f64 	%fd47, %fd25, %fd38, %fd46;
	add.f64 	%fd48, %fd47, 0d0000000000000000;
	add.f64 	%fd49, %fd48, 0dBC46A4CB00B9E7B0;
	add.f64 	%fd50, %fd44, %fd49;
	sub.f64 	%fd51, %fd44, %fd50;
	add.f64 	%fd52, %fd49, %fd51;
	mul.rn.f64 	%fd53, %fd24, %fd24;
	neg.f64 	%fd54, %fd53;
	fma.rn.f64 	%fd55, %fd24, %fd24, %fd54;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r22, %temp}, %fd43;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r23}, %fd43;
	}
	add.s32 	%r24, %r23, 1048576;
	mov.b64 	%fd56, {%r22, %r24};
	fma.rn.f64 	%fd57, %fd24, %fd56, %fd55;
	mul.rn.f64 	%fd58, %fd53, %fd24;
	neg.f64 	%fd59, %fd58;
	fma.rn.f64 	%fd60, %fd53, %fd24, %fd59;
	fma.rn.f64 	%fd61, %fd53, %fd43, %fd60;
	fma.rn.f64 	%fd62, %fd57, %fd24, %fd61;
	mul.rn.f64 	%fd63, %fd50, %fd58;
	neg.f64 	%fd64, %fd63;
	fma.rn.f64 	%fd65, %fd50, %fd58, %fd64;
	fma.rn.f64 	%fd66, %fd50, %fd62, %fd65;
	fma.rn.f64 	%fd67, %fd52, %fd58, %fd66;
	add.f64 	%fd68, %fd63, %fd67;
	sub.f64 	%fd69, %fd63, %fd68;
	add.f64 	%fd70, %fd67, %fd69;
	add.f64 	%fd71, %fd24, %fd68;
	sub.f64 	%fd72, %fd24, %fd71;
	add.f64 	%fd73, %fd68, %fd72;
	add.f64 	%fd74, %fd70, %fd73;
	add.f64 	%fd75, %fd43, %fd74;
	add.f64 	%fd76, %fd71, %fd75;
	sub.f64 	%fd77, %fd71, %fd76;
	add.f64 	%fd78, %fd75, %fd77;
	xor.b32  	%r25, %r52, -2147483648;
	mov.u32 	%r26, -2147483648;
	mov.u32 	%r27, 1127219200;
	mov.b64 	%fd79, {%r25, %r27};
	mov.b64 	%fd80, {%r26, %r27};
	sub.f64 	%fd81, %fd79, %fd80;
	mov.f64 	%fd82, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd83, %fd81, %fd82, %fd76;
	neg.f64 	%fd84, %fd81;
	fma.rn.f64 	%fd85, %fd84, %fd82, %fd83;
	sub.f64 	%fd86, %fd85, %fd76;
	sub.f64 	%fd87, %fd78, %fd86;
	mov.f64 	%fd88, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd89, %fd81, %fd88, %fd87;
	add.f64 	%fd90, %fd83, %fd89;
	sub.f64 	%fd91, %fd83, %fd90;
	add.f64 	%fd92, %fd89, %fd91;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r28}, %fd13;
	}
	shl.b32 	%r29, %r28, 1;
	setp.gt.u32 	%p3, %r29, -33554433;
	and.b32  	%r30, %r28, -15728641;
	selp.b32 	%r31, %r30, %r28, %p3;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r32, %temp}, %fd13;
	}
	mov.b64 	%fd93, {%r32, %r31};
	mul.rn.f64 	%fd94, %fd90, %fd93;
	neg.f64 	%fd95, %fd94;
	fma.rn.f64 	%fd96, %fd90, %fd93, %fd95;
	fma.rn.f64 	%fd97, %fd92, %fd93, %fd96;
	add.f64 	%fd4, %fd94, %fd97;
	sub.f64 	%fd98, %fd94, %fd4;
	add.f64 	%fd5, %fd97, %fd98;
	mov.f64 	%fd99, 0d4338000000000000;
	mov.f64 	%fd100, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd101, %fd4, %fd100, %fd99;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r13, %temp}, %fd101;
	}
	mov.f64 	%fd102, 0dC338000000000000;
	add.rn.f64 	%fd103, %fd101, %fd102;
	mov.f64 	%fd104, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd105, %fd103, %fd104, %fd4;
	mov.f64 	%fd106, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd107, %fd103, %fd106, %fd105;
	mov.f64 	%fd108, 0d3E928AF3FCA213EA;
	mov.f64 	%fd109, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd110, %fd109, %fd107, %fd108;
	mov.f64 	%fd111, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd112, %fd110, %fd107, %fd111;
	mov.f64 	%fd113, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd114, %fd112, %fd107, %fd113;
	mov.f64 	%fd115, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd116, %fd114, %fd107, %fd115;
	mov.f64 	%fd117, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd118, %fd116, %fd107, %fd117;
	mov.f64 	%fd119, 0d3F81111111122322;
	fma.rn.f64 	%fd120, %fd118, %fd107, %fd119;
	mov.f64 	%fd121, 0d3FA55555555502A1;
	fma.rn.f64 	%fd122, %fd120, %fd107, %fd121;
	mov.f64 	%fd123, 0d3FC5555555555511;
	fma.rn.f64 	%fd124, %fd122, %fd107, %fd123;
	mov.f64 	%fd125, 0d3FE000000000000B;
	fma.rn.f64 	%fd126, %fd124, %fd107, %fd125;
	fma.rn.f64 	%fd127, %fd126, %fd107, %fd16;
	fma.rn.f64 	%fd128, %fd127, %fd107, %fd16;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r14, %temp}, %fd128;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r15}, %fd128;
	}
	shl.b32 	%r33, %r13, 20;
	add.s32 	%r34, %r15, %r33;
	mov.b64 	%fd136, {%r14, %r34};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r35}, %fd4;
	}
	mov.b32 	%f2, %r35;
	abs.f32 	%f1, %f2;
	setp.lt.f32 	%p4, %f1, 0f4086232B;
	@%p4 bra 	$L__BB1_7;

	setp.lt.f64 	%p5, %fd4, 0d0000000000000000;
	add.f64 	%fd129, %fd4, 0d7FF0000000000000;
	selp.f64 	%fd136, 0d0000000000000000, %fd129, %p5;
	setp.geu.f32 	%p6, %f1, 0f40874800;
	@%p6 bra 	$L__BB1_7;

	mov.f64 	%fd134, 0d4338000000000000;
	mov.f64 	%fd133, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd132, %fd4, %fd133, %fd134;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r48, %temp}, %fd132;
	}
	shr.u32 	%r36, %r48, 31;
	add.s32 	%r37, %r48, %r36;
	shr.s32 	%r38, %r37, 1;
	shl.b32 	%r39, %r38, 20;
	add.s32 	%r40, %r15, %r39;
	mov.b64 	%fd130, {%r14, %r40};
	sub.s32 	%r41, %r48, %r38;
	shl.b32 	%r42, %r41, 20;
	add.s32 	%r43, %r42, 1072693248;
	mov.u32 	%r44, 0;
	mov.b64 	%fd131, {%r44, %r43};
	mul.f64 	%fd136, %fd130, %fd131;

$L__BB1_7:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r45}, %fd136;
	}
	and.b32  	%r46, %r45, 2147483647;
	setp.eq.s32 	%p7, %r46, 2146435072;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r47, %temp}, %fd136;
	}
	setp.eq.s32 	%p8, %r47, 0;
	and.pred  	%p9, %p8, %p7;
	@%p9 bra 	$L__BB1_9;

	fma.rn.f64 	%fd136, %fd136, %fd5, %fd136;

$L__BB1_9:
	st.param.f64 	[func_retval0+0], %fd136;
	ret;

}

