//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31833905
// Cuda compilation tools, release 11.8, V11.8.89
// Based on NVVM 7.0.1
//

.version 7.8
.target sm_52
.address_size 64

	// .globl	resultPixel
.func  (.param .b64 func_retval0) __internal_accurate_pow
(
	.param .b64 __internal_accurate_pow_param_0
)
;
.const .align 4 .u32 CountOfTrns = 512;
.const .align 4 .b8 trPoint1[6144];
.const .align 4 .b8 trPoint2[6144];
.const .align 4 .b8 trPoint3[6144];
.const .align 4 .b8 normals[6144];
.const .align 4 .b8 dRatios[2048];
.const .align 4 .b8 colors[6144];

.visible .entry resultPixel(
	.param .u64 resultPixel_param_0,
	.param .align 4 .b8 resultPixel_param_1[12],
	.param .u32 resultPixel_param_2,
	.param .u64 resultPixel_param_3
)
{
	.reg .pred 	%p<95>;
	.reg .f32 	%f<94>;
	.reg .b32 	%r<83>;
	.reg .f64 	%fd<62>;
	.reg .b64 	%rd<80>;


	ld.param.u64 	%rd36, [resultPixel_param_0];
	ld.param.u32 	%r13, [resultPixel_param_2];
	ld.param.u64 	%rd37, [resultPixel_param_3];
	ld.param.f32 	%f37, [resultPixel_param_1+8];
	ld.param.f32 	%f36, [resultPixel_param_1+4];
	ld.param.f32 	%f35, [resultPixel_param_1];
	mov.u32 	%r14, %ctaid.x;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r1, %r15, %r14, %r16;
	setp.ge.s32 	%p4, %r1, %r13;
	@%p4 bra 	$L__BB0_54;

	cvt.s64.s32 	%rd1, %r1;
	cvta.to.global.u64 	%rd38, %rd36;
	mul.wide.s32 	%rd39, %r1, 12;
	add.s64 	%rd40, %rd38, %rd39;
	ld.global.f32 	%f1, [%rd40];
	ld.global.f32 	%f2, [%rd40+4];
	ld.global.f32 	%f3, [%rd40+8];
	ld.const.u32 	%r2, [CountOfTrns];
	setp.lt.s32 	%p5, %r2, 1;
	mov.f32 	%f81, 0f41C80000;
	mov.f32 	%f82, %f81;
	mov.f32 	%f83, %f81;
	@%p5 bra 	$L__BB0_53;

	mov.f32 	%f84, 0f4B189680;
	mov.u32 	%r82, 0;
	mov.u64 	%rd73, normals;
	mov.u64 	%rd72, dRatios;
	mov.u64 	%rd71, colors;
	mov.u64 	%rd70, trPoint3;
	mov.u64 	%rd69, trPoint2;
	mov.u64 	%rd68, trPoint1;

$L__BB0_3:
	cvt.s64.s32 	%rd8, %r82;
	ld.const.f32 	%f11, [%rd73];
	ld.const.f32 	%f45, [%rd72];
	fma.rn.f32 	%f46, %f35, %f11, %f45;
	ld.const.f32 	%f12, [%rd73+4];
	fma.rn.f32 	%f47, %f36, %f12, %f46;
	ld.const.f32 	%f48, [%rd73+8];
	fma.rn.f32 	%f13, %f37, %f48, %f47;
	mul.f32 	%f49, %f2, %f12;
	fma.rn.f32 	%f50, %f1, %f11, %f49;
	fma.rn.f32 	%f14, %f3, %f48, %f50;
	setp.eq.f32 	%p6, %f14, 0f00000000;
	setp.ge.f32 	%p7, %f13, 0f00000000;
	and.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_52;

	div.rn.f32 	%f15, %f13, %f14;
	setp.gt.f32 	%p9, %f15, 0f80000000;
	@%p9 bra 	$L__BB0_52;

	mul.f32 	%f51, %f1, %f15;
	sub.f32 	%f16, %f35, %f51;
	mul.f32 	%f52, %f2, %f15;
	sub.f32 	%f17, %f36, %f52;
	mul.f32 	%f53, %f3, %f15;
	sub.f32 	%f18, %f37, %f53;
	setp.neu.f32 	%p10, %f11, 0f00000000;
	@%p10 bra 	$L__BB0_9;
	bra.uni 	$L__BB0_6;

$L__BB0_9:
	add.s64 	%rd79, %rd68, 4;
	add.s64 	%rd78, %rd68, 8;
	add.s64 	%rd77, %rd69, 4;
	add.s64 	%rd76, %rd69, 8;
	add.s64 	%rd75, %rd70, 4;
	add.s64 	%rd74, %rd70, 8;
	mov.f32 	%f85, %f18;
	mov.f32 	%f86, %f17;
	bra.uni 	$L__BB0_10;

$L__BB0_6:
	setp.neu.f32 	%p11, %f12, 0f00000000;
	mul.lo.s64 	%rd47, %rd8, 12;
	mov.u64 	%rd48, trPoint1;
	add.s64 	%rd79, %rd48, %rd47;
	mov.u64 	%rd49, trPoint2;
	add.s64 	%rd77, %rd49, %rd47;
	mov.u64 	%rd50, trPoint3;
	add.s64 	%rd75, %rd50, %rd47;
	@%p11 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;

$L__BB0_8:
	add.s64 	%rd60, %rd48, %rd47;
	add.s64 	%rd78, %rd60, 8;
	add.s64 	%rd62, %rd49, %rd47;
	add.s64 	%rd76, %rd62, 8;
	add.s64 	%rd64, %rd50, %rd47;
	add.s64 	%rd74, %rd64, 8;
	mov.f32 	%f85, %f18;
	mov.f32 	%f86, %f16;
	bra.uni 	$L__BB0_10;

$L__BB0_7:
	add.s64 	%rd53, %rd48, %rd47;
	add.s64 	%rd78, %rd53, 4;
	add.s64 	%rd55, %rd49, %rd47;
	add.s64 	%rd76, %rd55, 4;
	add.s64 	%rd57, %rd50, %rd47;
	add.s64 	%rd74, %rd57, 4;
	mov.f32 	%f85, %f17;
	mov.f32 	%f86, %f16;

$L__BB0_10:
	ld.const.f32 	%f54, [%rd79];
	sub.f32 	%f55, %f54, %f86;
	ld.const.f32 	%f56, [%rd76];
	ld.const.f32 	%f57, [%rd78];
	sub.f32 	%f58, %f56, %f57;
	mul.f32 	%f59, %f55, %f58;
	ld.const.f32 	%f60, [%rd77];
	sub.f32 	%f61, %f60, %f54;
	sub.f32 	%f62, %f57, %f85;
	mul.f32 	%f63, %f62, %f61;
	sub.f32 	%f64, %f59, %f63;
	sub.f32 	%f65, %f60, %f86;
	ld.const.f32 	%f66, [%rd74];
	sub.f32 	%f67, %f66, %f56;
	mul.f32 	%f68, %f65, %f67;
	ld.const.f32 	%f69, [%rd75];
	sub.f32 	%f70, %f69, %f60;
	sub.f32 	%f71, %f56, %f85;
	mul.f32 	%f72, %f71, %f70;
	sub.f32 	%f73, %f68, %f72;
	sub.f32 	%f74, %f69, %f86;
	sub.f32 	%f75, %f57, %f66;
	mul.f32 	%f76, %f74, %f75;
	sub.f32 	%f77, %f54, %f69;
	sub.f32 	%f78, %f66, %f85;
	mul.f32 	%f79, %f77, %f78;
	sub.f32 	%f80, %f76, %f79;
	setp.ge.f32 	%p12, %f64, 0f00000000;
	setp.ge.f32 	%p13, %f73, 0f00000000;
	and.pred  	%p14, %p12, %p13;
	setp.ge.f32 	%p15, %f80, 0f00000000;
	and.pred  	%p16, %p15, %p14;
	setp.le.f32 	%p17, %f64, 0f00000000;
	setp.le.f32 	%p18, %f73, 0f00000000;
	and.pred  	%p19, %p17, %p18;
	setp.le.f32 	%p20, %f80, 0f00000000;
	and.pred  	%p21, %p20, %p19;
	or.pred  	%p22, %p16, %p21;
	not.pred 	%p23, %p22;
	@%p23 bra 	$L__BB0_52;

	sub.f32 	%f21, %f16, %f35;
	cvt.f64.f32 	%fd1, %f21;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4}, %fd1;
	}
	mov.f64 	%fd36, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5}, %fd36;
	}
	and.b32  	%r6, %r5, 2146435072;
	setp.eq.s32 	%p24, %r6, 1062207488;
	abs.f64 	%fd2, %fd1;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd2;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0
	);
	ld.param.f64 	%fd54, [retval0+0];
	} // callseq 0
	setp.lt.s32 	%p25, %r4, 0;
	and.pred  	%p1, %p25, %p24;
	not.pred 	%p26, %p1;
	@%p26 bra 	$L__BB0_13;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r18}, %fd54;
	}
	xor.b32  	%r19, %r18, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r20, %temp}, %fd54;
	}
	mov.b64 	%fd54, {%r20, %r19};

$L__BB0_13:
	setp.eq.f32 	%p27, %f21, 0f00000000;
	@%p27 bra 	$L__BB0_17;
	bra.uni 	$L__BB0_14;

$L__BB0_17:
	selp.b32 	%r21, %r4, 0, %p24;
	mov.u32 	%r22, 0;
	or.b32  	%r23, %r21, 2146435072;
	setp.lt.s32 	%p31, %r5, 0;
	selp.b32 	%r24, %r23, %r21, %p31;
	mov.b64 	%fd54, {%r22, %r24};
	bra.uni 	$L__BB0_18;

$L__BB0_14:
	setp.gt.s32 	%p28, %r4, -1;
	@%p28 bra 	$L__BB0_18;

	mov.f64 	%fd37, 0d4000000000000000;
	cvt.rzi.f64.f64 	%fd38, %fd37;
	setp.eq.f64 	%p29, %fd38, 0d4000000000000000;
	@%p29 bra 	$L__BB0_18;

	mov.f64 	%fd54, 0dFFF8000000000000;

$L__BB0_18:
	add.f64 	%fd8, %fd1, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r25}, %fd8;
	}
	and.b32  	%r26, %r25, 2146435072;
	setp.ne.s32 	%p32, %r26, 2146435072;
	mov.f64 	%fd55, %fd54;
	@%p32 bra 	$L__BB0_24;

	setp.gtu.f64 	%p33, %fd2, 0d7FF0000000000000;
	mov.f64 	%fd55, %fd8;
	@%p33 bra 	$L__BB0_24;

	mov.f64 	%fd40, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r27, %temp}, %fd40;
	}
	and.b32  	%r7, %r5, 2147483647;
	setp.eq.s32 	%p34, %r7, 2146435072;
	setp.eq.s32 	%p35, %r27, 0;
	and.pred  	%p36, %p34, %p35;
	@%p36 bra 	$L__BB0_23;
	bra.uni 	$L__BB0_21;

$L__BB0_23:
	setp.gt.f64 	%p43, %fd2, 0d3FF0000000000000;
	selp.b32 	%r34, 2146435072, 0, %p43;
	mov.u32 	%r35, 0;
	xor.b32  	%r36, %r34, 2146435072;
	setp.lt.s32 	%p44, %r5, 0;
	selp.b32 	%r37, %r36, %r34, %p44;
	setp.eq.f32 	%p45, %f21, 0fBF800000;
	selp.b32 	%r38, 1072693248, %r37, %p45;
	mov.b64 	%fd55, {%r35, %r38};
	bra.uni 	$L__BB0_24;

$L__BB0_21:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r28, %temp}, %fd1;
	}
	and.b32  	%r29, %r4, 2147483647;
	setp.ne.s32 	%p37, %r29, 2146435072;
	setp.ne.s32 	%p38, %r28, 0;
	or.pred  	%p39, %p37, %p38;
	mov.f64 	%fd55, %fd54;
	@%p39 bra 	$L__BB0_24;

	setp.gt.s32 	%p40, %r5, -1;
	selp.b32 	%r30, 2146435072, 0, %p40;
	mov.u32 	%r31, 0;
	setp.ne.s32 	%p41, %r7, 1071644672;
	and.pred  	%p42, %p41, %p1;
	or.b32  	%r32, %r30, -2147483648;
	selp.b32 	%r33, %r32, %r30, %p42;
	mov.b64 	%fd55, {%r31, %r33};

$L__BB0_24:
	setp.eq.f32 	%p46, %f21, 0f3F800000;
	selp.f64 	%fd12, 0d3FF0000000000000, %fd55, %p46;
	sub.f32 	%f22, %f17, %f36;
	cvt.f64.f32 	%fd13, %f22;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8}, %fd13;
	}
	abs.f64 	%fd14, %fd13;
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd14;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0
	);
	ld.param.f64 	%fd57, [retval0+0];
	} // callseq 1
	setp.lt.s32 	%p47, %r8, 0;
	and.pred  	%p2, %p47, %p24;
	not.pred 	%p49, %p2;
	@%p49 bra 	$L__BB0_26;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r39}, %fd57;
	}
	xor.b32  	%r40, %r39, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r41, %temp}, %fd57;
	}
	mov.b64 	%fd57, {%r41, %r40};

$L__BB0_26:
	setp.eq.f32 	%p50, %f22, 0f00000000;
	@%p50 bra 	$L__BB0_30;
	bra.uni 	$L__BB0_27;

$L__BB0_30:
	selp.b32 	%r42, %r8, 0, %p24;
	mov.u32 	%r43, 0;
	or.b32  	%r44, %r42, 2146435072;
	setp.lt.s32 	%p54, %r5, 0;
	selp.b32 	%r45, %r44, %r42, %p54;
	mov.b64 	%fd57, {%r43, %r45};
	bra.uni 	$L__BB0_31;

$L__BB0_27:
	setp.gt.s32 	%p51, %r8, -1;
	@%p51 bra 	$L__BB0_31;

	mov.f64 	%fd41, 0d4000000000000000;
	cvt.rzi.f64.f64 	%fd42, %fd41;
	setp.eq.f64 	%p52, %fd42, 0d4000000000000000;
	@%p52 bra 	$L__BB0_31;

	mov.f64 	%fd57, 0dFFF8000000000000;

$L__BB0_31:
	add.f64 	%fd20, %fd13, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r46}, %fd20;
	}
	and.b32  	%r47, %r46, 2146435072;
	setp.ne.s32 	%p55, %r47, 2146435072;
	mov.f64 	%fd58, %fd57;
	@%p55 bra 	$L__BB0_37;

	setp.gtu.f64 	%p56, %fd14, 0d7FF0000000000000;
	mov.f64 	%fd58, %fd20;
	@%p56 bra 	$L__BB0_37;

	mov.f64 	%fd44, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r48, %temp}, %fd44;
	}
	and.b32  	%r9, %r5, 2147483647;
	setp.eq.s32 	%p57, %r9, 2146435072;
	setp.eq.s32 	%p58, %r48, 0;
	and.pred  	%p59, %p57, %p58;
	@%p59 bra 	$L__BB0_36;
	bra.uni 	$L__BB0_34;

$L__BB0_36:
	setp.gt.f64 	%p66, %fd14, 0d3FF0000000000000;
	selp.b32 	%r55, 2146435072, 0, %p66;
	mov.u32 	%r56, 0;
	xor.b32  	%r57, %r55, 2146435072;
	setp.lt.s32 	%p67, %r5, 0;
	selp.b32 	%r58, %r57, %r55, %p67;
	setp.eq.f32 	%p68, %f22, 0fBF800000;
	selp.b32 	%r59, 1072693248, %r58, %p68;
	mov.b64 	%fd58, {%r56, %r59};
	bra.uni 	$L__BB0_37;

$L__BB0_34:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd13;
	}
	and.b32  	%r50, %r8, 2147483647;
	setp.ne.s32 	%p60, %r50, 2146435072;
	setp.ne.s32 	%p61, %r49, 0;
	or.pred  	%p62, %p60, %p61;
	mov.f64 	%fd58, %fd57;
	@%p62 bra 	$L__BB0_37;

	setp.gt.s32 	%p63, %r5, -1;
	selp.b32 	%r51, 2146435072, 0, %p63;
	mov.u32 	%r52, 0;
	setp.ne.s32 	%p64, %r9, 1071644672;
	and.pred  	%p65, %p64, %p2;
	or.b32  	%r53, %r51, -2147483648;
	selp.b32 	%r54, %r53, %r51, %p65;
	mov.b64 	%fd58, {%r52, %r54};

$L__BB0_37:
	setp.eq.f32 	%p69, %f22, 0f3F800000;
	selp.f64 	%fd45, 0d3FF0000000000000, %fd58, %p69;
	add.f64 	%fd24, %fd12, %fd45;
	sub.f32 	%f23, %f18, %f37;
	cvt.f64.f32 	%fd25, %f23;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r10}, %fd25;
	}
	abs.f64 	%fd26, %fd25;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd26;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0
	);
	ld.param.f64 	%fd60, [retval0+0];
	} // callseq 2
	setp.lt.s32 	%p70, %r10, 0;
	and.pred  	%p3, %p70, %p24;
	not.pred 	%p72, %p3;
	@%p72 bra 	$L__BB0_39;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r60}, %fd60;
	}
	xor.b32  	%r61, %r60, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r62, %temp}, %fd60;
	}
	mov.b64 	%fd60, {%r62, %r61};

$L__BB0_39:
	setp.eq.f32 	%p73, %f23, 0f00000000;
	@%p73 bra 	$L__BB0_43;
	bra.uni 	$L__BB0_40;

$L__BB0_43:
	selp.b32 	%r63, %r10, 0, %p24;
	mov.u32 	%r64, 0;
	or.b32  	%r65, %r63, 2146435072;
	setp.lt.s32 	%p77, %r5, 0;
	selp.b32 	%r66, %r65, %r63, %p77;
	mov.b64 	%fd60, {%r64, %r66};
	bra.uni 	$L__BB0_44;

$L__BB0_40:
	setp.gt.s32 	%p74, %r10, -1;
	@%p74 bra 	$L__BB0_44;

	mov.f64 	%fd46, 0d4000000000000000;
	cvt.rzi.f64.f64 	%fd47, %fd46;
	setp.eq.f64 	%p75, %fd47, 0d4000000000000000;
	@%p75 bra 	$L__BB0_44;

	mov.f64 	%fd60, 0dFFF8000000000000;

$L__BB0_44:
	add.f64 	%fd32, %fd25, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r67}, %fd32;
	}
	and.b32  	%r68, %r67, 2146435072;
	setp.ne.s32 	%p78, %r68, 2146435072;
	mov.f64 	%fd61, %fd60;
	@%p78 bra 	$L__BB0_50;

	setp.gtu.f64 	%p79, %fd26, 0d7FF0000000000000;
	mov.f64 	%fd61, %fd32;
	@%p79 bra 	$L__BB0_50;

	mov.f64 	%fd49, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r69, %temp}, %fd49;
	}
	and.b32  	%r11, %r5, 2147483647;
	setp.eq.s32 	%p80, %r11, 2146435072;
	setp.eq.s32 	%p81, %r69, 0;
	and.pred  	%p82, %p80, %p81;
	@%p82 bra 	$L__BB0_49;
	bra.uni 	$L__BB0_47;

$L__BB0_49:
	setp.gt.f64 	%p89, %fd26, 0d3FF0000000000000;
	selp.b32 	%r76, 2146435072, 0, %p89;
	mov.u32 	%r77, 0;
	xor.b32  	%r78, %r76, 2146435072;
	setp.lt.s32 	%p90, %r5, 0;
	selp.b32 	%r79, %r78, %r76, %p90;
	setp.eq.f32 	%p91, %f23, 0fBF800000;
	selp.b32 	%r80, 1072693248, %r79, %p91;
	mov.b64 	%fd61, {%r77, %r80};
	bra.uni 	$L__BB0_50;

$L__BB0_47:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r70, %temp}, %fd25;
	}
	and.b32  	%r71, %r10, 2147483647;
	setp.ne.s32 	%p83, %r71, 2146435072;
	setp.ne.s32 	%p84, %r70, 0;
	or.pred  	%p85, %p83, %p84;
	mov.f64 	%fd61, %fd60;
	@%p85 bra 	$L__BB0_50;

	setp.gt.s32 	%p86, %r5, -1;
	selp.b32 	%r72, 2146435072, 0, %p86;
	mov.u32 	%r73, 0;
	setp.ne.s32 	%p87, %r11, 1071644672;
	and.pred  	%p88, %p87, %p3;
	or.b32  	%r74, %r72, -2147483648;
	selp.b32 	%r75, %r74, %r72, %p88;
	mov.b64 	%fd61, {%r73, %r75};

$L__BB0_50:
	setp.eq.f32 	%p92, %f23, 0f3F800000;
	selp.f64 	%fd50, 0d3FF0000000000000, %fd61, %p92;
	add.f64 	%fd51, %fd24, %fd50;
	sqrt.rn.f64 	%fd52, %fd51;
	cvt.rn.f32.f64 	%f24, %fd52;
	setp.leu.f32 	%p93, %f84, %f24;
	@%p93 bra 	$L__BB0_52;

	ld.const.f32 	%f83, [%rd71+8];
	ld.const.f32 	%f82, [%rd71+4];
	ld.const.f32 	%f81, [%rd71];
	mov.f32 	%f84, %f24;

$L__BB0_52:
	cvt.u32.u64 	%r81, %rd8;
	add.s32 	%r82, %r81, 1;
	add.s64 	%rd73, %rd73, 12;
	add.s64 	%rd72, %rd72, 4;
	add.s64 	%rd71, %rd71, 12;
	add.s64 	%rd70, %rd70, 12;
	add.s64 	%rd69, %rd69, 12;
	add.s64 	%rd68, %rd68, 12;
	setp.lt.s32 	%p94, %r82, %r2;
	@%p94 bra 	$L__BB0_3;

$L__BB0_53:
	cvta.to.global.u64 	%rd65, %rd37;
	mul.lo.s64 	%rd66, %rd1, 12;
	add.s64 	%rd67, %rd65, %rd66;
	st.global.f32 	[%rd67], %f81;
	st.global.f32 	[%rd67+4], %f82;
	st.global.f32 	[%rd67+8], %f83;

$L__BB0_54:
	ret;

}
.func  (.param .b64 func_retval0) __internal_accurate_pow(
	.param .b64 __internal_accurate_pow_param_0
)
{
	.reg .pred 	%p<10>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<53>;
	.reg .f64 	%fd<138>;


	ld.param.f64 	%fd12, [__internal_accurate_pow_param_0];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd12;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd12;
	}
	shr.u32 	%r51, %r50, 20;
	setp.ne.s32 	%p1, %r51, 0;
	@%p1 bra 	$L__BB1_2;

	mul.f64 	%fd13, %fd12, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd13;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd13;
	}
	shr.u32 	%r16, %r50, 20;
	add.s32 	%r51, %r16, -54;

$L__BB1_2:
	add.s32 	%r52, %r51, -1023;
	and.b32  	%r17, %r50, -2146435073;
	or.b32  	%r18, %r17, 1072693248;
	mov.b64 	%fd135, {%r49, %r18};
	setp.lt.u32 	%p2, %r18, 1073127583;
	@%p2 bra 	$L__BB1_4;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r19, %temp}, %fd135;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd135;
	}
	add.s32 	%r21, %r20, -1048576;
	mov.b64 	%fd135, {%r19, %r21};
	add.s32 	%r52, %r51, -1022;

$L__BB1_4:
	add.f64 	%fd14, %fd135, 0d3FF0000000000000;
	mov.f64 	%fd15, 0d3FF0000000000000;
	rcp.approx.ftz.f64 	%fd16, %fd14;
	neg.f64 	%fd17, %fd14;
	fma.rn.f64 	%fd18, %fd17, %fd16, %fd15;
	fma.rn.f64 	%fd19, %fd18, %fd18, %fd18;
	fma.rn.f64 	%fd20, %fd19, %fd16, %fd16;
	add.f64 	%fd21, %fd135, 0dBFF0000000000000;
	mul.f64 	%fd22, %fd21, %fd20;
	fma.rn.f64 	%fd23, %fd21, %fd20, %fd22;
	mul.f64 	%fd24, %fd23, %fd23;
	mov.f64 	%fd25, 0d3ED0F5D241AD3B5A;
	mov.f64 	%fd26, 0d3EB0F5FF7D2CAFE2;
	fma.rn.f64 	%fd27, %fd26, %fd24, %fd25;
	mov.f64 	%fd28, 0d3EF3B20A75488A3F;
	fma.rn.f64 	%fd29, %fd27, %fd24, %fd28;
	mov.f64 	%fd30, 0d3F1745CDE4FAECD5;
	fma.rn.f64 	%fd31, %fd29, %fd24, %fd30;
	mov.f64 	%fd32, 0d3F3C71C7258A578B;
	fma.rn.f64 	%fd33, %fd31, %fd24, %fd32;
	mov.f64 	%fd34, 0d3F6249249242B910;
	fma.rn.f64 	%fd35, %fd33, %fd24, %fd34;
	mov.f64 	%fd36, 0d3F89999999999DFB;
	fma.rn.f64 	%fd37, %fd35, %fd24, %fd36;
	sub.f64 	%fd38, %fd21, %fd23;
	add.f64 	%fd39, %fd38, %fd38;
	mov.f64 	%fd40, 0d4000000000000000;
	neg.f64 	%fd41, %fd23;
	fma.rn.f64 	%fd42, %fd41, %fd21, %fd39;
	mul.f64 	%fd43, %fd20, %fd42;
	fma.rn.f64 	%fd44, %fd24, %fd37, 0d3FB5555555555555;
	mov.f64 	%fd45, 0d3FB5555555555555;
	sub.f64 	%fd46, %fd45, %fd44;
	fma.rn.f64 	%fd47, %fd24, %fd37, %fd46;
	add.f64 	%fd48, %fd47, 0d0000000000000000;
	add.f64 	%fd49, %fd48, 0dBC46A4CB00B9E7B0;
	add.f64 	%fd50, %fd44, %fd49;
	sub.f64 	%fd51, %fd44, %fd50;
	add.f64 	%fd52, %fd49, %fd51;
	mul.rn.f64 	%fd53, %fd23, %fd23;
	neg.f64 	%fd54, %fd53;
	fma.rn.f64 	%fd55, %fd23, %fd23, %fd54;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r22, %temp}, %fd43;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r23}, %fd43;
	}
	add.s32 	%r24, %r23, 1048576;
	mov.b64 	%fd56, {%r22, %r24};
	fma.rn.f64 	%fd57, %fd23, %fd56, %fd55;
	mul.rn.f64 	%fd58, %fd53, %fd23;
	neg.f64 	%fd59, %fd58;
	fma.rn.f64 	%fd60, %fd53, %fd23, %fd59;
	fma.rn.f64 	%fd61, %fd53, %fd43, %fd60;
	fma.rn.f64 	%fd62, %fd57, %fd23, %fd61;
	mul.rn.f64 	%fd63, %fd50, %fd58;
	neg.f64 	%fd64, %fd63;
	fma.rn.f64 	%fd65, %fd50, %fd58, %fd64;
	fma.rn.f64 	%fd66, %fd50, %fd62, %fd65;
	fma.rn.f64 	%fd67, %fd52, %fd58, %fd66;
	add.f64 	%fd68, %fd63, %fd67;
	sub.f64 	%fd69, %fd63, %fd68;
	add.f64 	%fd70, %fd67, %fd69;
	add.f64 	%fd71, %fd23, %fd68;
	sub.f64 	%fd72, %fd23, %fd71;
	add.f64 	%fd73, %fd68, %fd72;
	add.f64 	%fd74, %fd70, %fd73;
	add.f64 	%fd75, %fd43, %fd74;
	add.f64 	%fd76, %fd71, %fd75;
	sub.f64 	%fd77, %fd71, %fd76;
	add.f64 	%fd78, %fd75, %fd77;
	xor.b32  	%r25, %r52, -2147483648;
	mov.u32 	%r26, -2147483648;
	mov.u32 	%r27, 1127219200;
	mov.b64 	%fd79, {%r25, %r27};
	mov.b64 	%fd80, {%r26, %r27};
	sub.f64 	%fd81, %fd79, %fd80;
	mov.f64 	%fd82, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd83, %fd81, %fd82, %fd76;
	neg.f64 	%fd84, %fd81;
	fma.rn.f64 	%fd85, %fd84, %fd82, %fd83;
	sub.f64 	%fd86, %fd85, %fd76;
	sub.f64 	%fd87, %fd78, %fd86;
	mov.f64 	%fd88, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd89, %fd81, %fd88, %fd87;
	add.f64 	%fd90, %fd83, %fd89;
	sub.f64 	%fd91, %fd83, %fd90;
	add.f64 	%fd92, %fd89, %fd91;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r28}, %fd40;
	}
	shl.b32 	%r29, %r28, 1;
	setp.gt.u32 	%p3, %r29, -33554433;
	and.b32  	%r30, %r28, -15728641;
	selp.b32 	%r31, %r30, %r28, %p3;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r32, %temp}, %fd40;
	}
	mov.b64 	%fd93, {%r32, %r31};
	mul.rn.f64 	%fd94, %fd90, %fd93;
	neg.f64 	%fd95, %fd94;
	fma.rn.f64 	%fd96, %fd90, %fd93, %fd95;
	fma.rn.f64 	%fd97, %fd92, %fd93, %fd96;
	add.f64 	%fd4, %fd94, %fd97;
	sub.f64 	%fd98, %fd94, %fd4;
	add.f64 	%fd5, %fd97, %fd98;
	mov.f64 	%fd99, 0d4338000000000000;
	mov.f64 	%fd100, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd101, %fd4, %fd100, %fd99;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r13, %temp}, %fd101;
	}
	mov.f64 	%fd102, 0dC338000000000000;
	add.rn.f64 	%fd103, %fd101, %fd102;
	mov.f64 	%fd104, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd105, %fd103, %fd104, %fd4;
	mov.f64 	%fd106, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd107, %fd103, %fd106, %fd105;
	mov.f64 	%fd108, 0d3E928AF3FCA213EA;
	mov.f64 	%fd109, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd110, %fd109, %fd107, %fd108;
	mov.f64 	%fd111, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd112, %fd110, %fd107, %fd111;
	mov.f64 	%fd113, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd114, %fd112, %fd107, %fd113;
	mov.f64 	%fd115, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd116, %fd114, %fd107, %fd115;
	mov.f64 	%fd117, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd118, %fd116, %fd107, %fd117;
	mov.f64 	%fd119, 0d3F81111111122322;
	fma.rn.f64 	%fd120, %fd118, %fd107, %fd119;
	mov.f64 	%fd121, 0d3FA55555555502A1;
	fma.rn.f64 	%fd122, %fd120, %fd107, %fd121;
	mov.f64 	%fd123, 0d3FC5555555555511;
	fma.rn.f64 	%fd124, %fd122, %fd107, %fd123;
	mov.f64 	%fd125, 0d3FE000000000000B;
	fma.rn.f64 	%fd126, %fd124, %fd107, %fd125;
	fma.rn.f64 	%fd127, %fd126, %fd107, %fd15;
	fma.rn.f64 	%fd128, %fd127, %fd107, %fd15;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r14, %temp}, %fd128;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r15}, %fd128;
	}
	shl.b32 	%r33, %r13, 20;
	add.s32 	%r34, %r15, %r33;
	mov.b64 	%fd136, {%r14, %r34};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r35}, %fd4;
	}
	mov.b32 	%f2, %r35;
	abs.f32 	%f1, %f2;
	setp.lt.f32 	%p4, %f1, 0f4086232B;
	@%p4 bra 	$L__BB1_7;

	setp.lt.f64 	%p5, %fd4, 0d0000000000000000;
	add.f64 	%fd129, %fd4, 0d7FF0000000000000;
	selp.f64 	%fd136, 0d0000000000000000, %fd129, %p5;
	setp.geu.f32 	%p6, %f1, 0f40874800;
	@%p6 bra 	$L__BB1_7;

	mov.f64 	%fd134, 0d4338000000000000;
	mov.f64 	%fd133, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd132, %fd4, %fd133, %fd134;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r48, %temp}, %fd132;
	}
	shr.u32 	%r36, %r48, 31;
	add.s32 	%r37, %r48, %r36;
	shr.s32 	%r38, %r37, 1;
	shl.b32 	%r39, %r38, 20;
	add.s32 	%r40, %r15, %r39;
	mov.b64 	%fd130, {%r14, %r40};
	sub.s32 	%r41, %r48, %r38;
	shl.b32 	%r42, %r41, 20;
	add.s32 	%r43, %r42, 1072693248;
	mov.u32 	%r44, 0;
	mov.b64 	%fd131, {%r44, %r43};
	mul.f64 	%fd136, %fd130, %fd131;

$L__BB1_7:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r45}, %fd136;
	}
	and.b32  	%r46, %r45, 2147483647;
	setp.eq.s32 	%p7, %r46, 2146435072;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r47, %temp}, %fd136;
	}
	setp.eq.s32 	%p8, %r47, 0;
	and.pred  	%p9, %p8, %p7;
	@%p9 bra 	$L__BB1_9;

	fma.rn.f64 	%fd136, %fd136, %fd5, %fd136;

$L__BB1_9:
	st.param.f64 	[func_retval0+0], %fd136;
	ret;

}

