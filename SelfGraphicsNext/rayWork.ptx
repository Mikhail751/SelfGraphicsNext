//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31833905
// Cuda compilation tools, release 11.8, V11.8.89
// Based on NVVM 7.0.1
//

.version 7.8
.target sm_52
.address_size 64

	// .globl	resultPixel
.func  (.param .b64 func_retval0) __internal_accurate_pow
(
	.param .b64 __internal_accurate_pow_param_0,
	.param .b64 __internal_accurate_pow_param_1
)
;
.const .align 4 .u32 CountOfTrns = 512;
.const .align 4 .b8 trPoint1[6144];
.const .align 4 .b8 trPoint2[6144];
.const .align 4 .b8 trPoint3[6144];
.const .align 4 .b8 normals[6144];
.const .align 4 .b8 dRatios[2048];
.const .align 4 .b8 colors[6144];

.visible .entry resultPixel(
	.param .u64 resultPixel_param_0,
	.param .align 4 .b8 resultPixel_param_1[12],
	.param .u32 resultPixel_param_2,
	.param .align 4 .b8 resultPixel_param_3[12],
	.param .u64 resultPixel_param_4
)
{
	.reg .pred 	%p<119>;
	.reg .f32 	%f<115>;
	.reg .b32 	%r<108>;
	.reg .f64 	%fd<83>;
	.reg .b64 	%rd<80>;


	ld.param.u64 	%rd36, [resultPixel_param_0];
	ld.param.u32 	%r17, [resultPixel_param_2];
	ld.param.u64 	%rd37, [resultPixel_param_4];
	ld.param.f32 	%f45, [resultPixel_param_3+8];
	ld.param.f32 	%f44, [resultPixel_param_3+4];
	ld.param.f32 	%f42, [resultPixel_param_1+8];
	ld.param.f32 	%f41, [resultPixel_param_1+4];
	ld.param.f32 	%f40, [resultPixel_param_1];
	mov.u32 	%r18, %ctaid.x;
	mov.u32 	%r19, %ntid.x;
	mov.u32 	%r20, %tid.x;
	mad.lo.s32 	%r1, %r19, %r18, %r20;
	setp.ge.s32 	%p5, %r1, %r17;
	@%p5 bra 	$L__BB0_67;

	cvt.s64.s32 	%rd1, %r1;
	cvta.to.global.u64 	%rd38, %rd36;
	mul.wide.s32 	%rd39, %r1, 12;
	add.s64 	%rd40, %rd38, %rd39;
	ld.global.f32 	%f1, [%rd40];
	ld.global.f32 	%f2, [%rd40+4];
	ld.global.f32 	%f3, [%rd40+8];
	ld.const.u32 	%r2, [CountOfTrns];
	setp.lt.s32 	%p6, %r2, 1;
	mov.f32 	%f105, 0f41C80000;
	mov.f32 	%f104, %f105;
	mov.f32 	%f103, %f105;
	@%p6 bra 	$L__BB0_66;

	mov.f32 	%f102, 0f4B189680;
	mov.u32 	%r107, 0;
	mov.u64 	%rd73, normals;
	mov.u64 	%rd72, dRatios;
	mov.u64 	%rd71, colors;
	mov.u64 	%rd70, trPoint3;
	mov.u64 	%rd69, trPoint2;
	mov.u64 	%rd68, trPoint1;

$L__BB0_3:
	cvt.s64.s32 	%rd8, %r107;
	ld.const.f32 	%f14, [%rd73];
	ld.const.f32 	%f53, [%rd72];
	fma.rn.f32 	%f54, %f40, %f14, %f53;
	ld.const.f32 	%f15, [%rd73+4];
	fma.rn.f32 	%f55, %f41, %f15, %f54;
	ld.const.f32 	%f16, [%rd73+8];
	fma.rn.f32 	%f17, %f42, %f16, %f55;
	mul.f32 	%f56, %f2, %f15;
	fma.rn.f32 	%f57, %f1, %f14, %f56;
	fma.rn.f32 	%f18, %f3, %f16, %f57;
	setp.eq.f32 	%p7, %f18, 0f00000000;
	setp.ge.f32 	%p8, %f17, 0f00000000;
	and.pred  	%p9, %p7, %p8;
	@%p9 bra 	$L__BB0_65;

	div.rn.f32 	%f19, %f17, %f18;
	setp.gt.f32 	%p10, %f19, 0f80000000;
	@%p10 bra 	$L__BB0_65;

	mul.f32 	%f58, %f1, %f19;
	sub.f32 	%f20, %f40, %f58;
	mul.f32 	%f59, %f2, %f19;
	sub.f32 	%f21, %f41, %f59;
	mul.f32 	%f60, %f3, %f19;
	sub.f32 	%f22, %f42, %f60;
	setp.neu.f32 	%p11, %f14, 0f00000000;
	@%p11 bra 	$L__BB0_9;
	bra.uni 	$L__BB0_6;

$L__BB0_9:
	add.s64 	%rd79, %rd68, 4;
	add.s64 	%rd78, %rd68, 8;
	add.s64 	%rd77, %rd69, 4;
	add.s64 	%rd76, %rd69, 8;
	add.s64 	%rd75, %rd70, 4;
	add.s64 	%rd74, %rd70, 8;
	mov.f32 	%f106, %f22;
	mov.f32 	%f107, %f21;
	bra.uni 	$L__BB0_10;

$L__BB0_6:
	ld.const.f32 	%f98, [%rd73+4];
	setp.neu.f32 	%p12, %f98, 0f00000000;
	mul.lo.s64 	%rd47, %rd8, 12;
	mov.u64 	%rd48, trPoint1;
	add.s64 	%rd79, %rd48, %rd47;
	mov.u64 	%rd49, trPoint2;
	add.s64 	%rd77, %rd49, %rd47;
	mov.u64 	%rd50, trPoint3;
	add.s64 	%rd75, %rd50, %rd47;
	@%p12 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;

$L__BB0_8:
	add.s64 	%rd60, %rd48, %rd47;
	add.s64 	%rd78, %rd60, 8;
	add.s64 	%rd62, %rd49, %rd47;
	add.s64 	%rd76, %rd62, 8;
	add.s64 	%rd64, %rd50, %rd47;
	add.s64 	%rd74, %rd64, 8;
	mov.f32 	%f106, %f22;
	mov.f32 	%f107, %f20;
	bra.uni 	$L__BB0_10;

$L__BB0_7:
	add.s64 	%rd53, %rd48, %rd47;
	add.s64 	%rd78, %rd53, 4;
	add.s64 	%rd55, %rd49, %rd47;
	add.s64 	%rd76, %rd55, 4;
	add.s64 	%rd57, %rd50, %rd47;
	add.s64 	%rd74, %rd57, 4;
	mov.f32 	%f106, %f21;
	mov.f32 	%f107, %f20;

$L__BB0_10:
	ld.const.f32 	%f61, [%rd79];
	sub.f32 	%f62, %f61, %f107;
	ld.const.f32 	%f63, [%rd76];
	ld.const.f32 	%f64, [%rd78];
	sub.f32 	%f65, %f63, %f64;
	mul.f32 	%f66, %f62, %f65;
	ld.const.f32 	%f67, [%rd77];
	sub.f32 	%f68, %f67, %f61;
	sub.f32 	%f69, %f64, %f106;
	mul.f32 	%f70, %f69, %f68;
	sub.f32 	%f71, %f66, %f70;
	sub.f32 	%f72, %f67, %f107;
	ld.const.f32 	%f73, [%rd74];
	sub.f32 	%f74, %f73, %f63;
	mul.f32 	%f75, %f72, %f74;
	ld.const.f32 	%f76, [%rd75];
	sub.f32 	%f77, %f76, %f67;
	sub.f32 	%f78, %f63, %f106;
	mul.f32 	%f79, %f78, %f77;
	sub.f32 	%f80, %f75, %f79;
	sub.f32 	%f81, %f76, %f107;
	sub.f32 	%f82, %f64, %f73;
	mul.f32 	%f83, %f81, %f82;
	sub.f32 	%f84, %f61, %f76;
	sub.f32 	%f85, %f73, %f106;
	mul.f32 	%f86, %f84, %f85;
	sub.f32 	%f87, %f83, %f86;
	setp.ge.f32 	%p13, %f71, 0f00000000;
	setp.ge.f32 	%p14, %f80, 0f00000000;
	and.pred  	%p15, %p13, %p14;
	setp.ge.f32 	%p16, %f87, 0f00000000;
	and.pred  	%p17, %p16, %p15;
	setp.le.f32 	%p18, %f71, 0f00000000;
	setp.le.f32 	%p19, %f80, 0f00000000;
	and.pred  	%p20, %p18, %p19;
	setp.le.f32 	%p21, %f87, 0f00000000;
	and.pred  	%p22, %p21, %p20;
	or.pred  	%p23, %p17, %p22;
	not.pred 	%p24, %p23;
	@%p24 bra 	$L__BB0_65;

	sub.f32 	%f25, %f20, %f40;
	cvt.f64.f32 	%fd1, %f25;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4}, %fd1;
	}
	mov.f64 	%fd47, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5}, %fd47;
	}
	and.b32  	%r6, %r5, 2146435072;
	setp.eq.s32 	%p25, %r6, 1062207488;
	abs.f64 	%fd2, %fd1;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd2;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd47;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd72, [retval0+0];
	} // callseq 0
	setp.lt.s32 	%p26, %r4, 0;
	and.pred  	%p1, %p26, %p25;
	not.pred 	%p27, %p1;
	@%p27 bra 	$L__BB0_13;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r22}, %fd72;
	}
	xor.b32  	%r23, %r22, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r24, %temp}, %fd72;
	}
	mov.b64 	%fd72, {%r24, %r23};

$L__BB0_13:
	setp.eq.f32 	%p28, %f25, 0f00000000;
	@%p28 bra 	$L__BB0_17;
	bra.uni 	$L__BB0_14;

$L__BB0_17:
	selp.b32 	%r25, %r4, 0, %p25;
	mov.u32 	%r26, 0;
	or.b32  	%r27, %r25, 2146435072;
	setp.lt.s32 	%p32, %r5, 0;
	selp.b32 	%r28, %r27, %r25, %p32;
	mov.b64 	%fd72, {%r26, %r28};
	bra.uni 	$L__BB0_18;

$L__BB0_14:
	setp.gt.s32 	%p29, %r4, -1;
	@%p29 bra 	$L__BB0_18;

	mov.f64 	%fd48, 0d4000000000000000;
	cvt.rzi.f64.f64 	%fd49, %fd48;
	setp.eq.f64 	%p30, %fd49, 0d4000000000000000;
	@%p30 bra 	$L__BB0_18;

	mov.f64 	%fd72, 0dFFF8000000000000;

$L__BB0_18:
	add.f64 	%fd8, %fd1, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r29}, %fd8;
	}
	and.b32  	%r30, %r29, 2146435072;
	setp.ne.s32 	%p33, %r30, 2146435072;
	mov.f64 	%fd73, %fd72;
	@%p33 bra 	$L__BB0_24;

	setp.gtu.f64 	%p34, %fd2, 0d7FF0000000000000;
	mov.f64 	%fd73, %fd8;
	@%p34 bra 	$L__BB0_24;

	mov.f64 	%fd51, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r31, %temp}, %fd51;
	}
	and.b32  	%r7, %r5, 2147483647;
	setp.eq.s32 	%p35, %r7, 2146435072;
	setp.eq.s32 	%p36, %r31, 0;
	and.pred  	%p37, %p35, %p36;
	@%p37 bra 	$L__BB0_23;
	bra.uni 	$L__BB0_21;

$L__BB0_23:
	setp.gt.f64 	%p44, %fd2, 0d3FF0000000000000;
	selp.b32 	%r38, 2146435072, 0, %p44;
	mov.u32 	%r39, 0;
	xor.b32  	%r40, %r38, 2146435072;
	setp.lt.s32 	%p45, %r5, 0;
	selp.b32 	%r41, %r40, %r38, %p45;
	setp.eq.f32 	%p46, %f25, 0fBF800000;
	selp.b32 	%r42, 1072693248, %r41, %p46;
	mov.b64 	%fd73, {%r39, %r42};
	bra.uni 	$L__BB0_24;

$L__BB0_21:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r32, %temp}, %fd1;
	}
	and.b32  	%r33, %r4, 2147483647;
	setp.ne.s32 	%p38, %r33, 2146435072;
	setp.ne.s32 	%p39, %r32, 0;
	or.pred  	%p40, %p38, %p39;
	mov.f64 	%fd73, %fd72;
	@%p40 bra 	$L__BB0_24;

	setp.gt.s32 	%p41, %r5, -1;
	selp.b32 	%r34, 2146435072, 0, %p41;
	mov.u32 	%r35, 0;
	setp.ne.s32 	%p42, %r7, 1071644672;
	and.pred  	%p43, %p42, %p1;
	or.b32  	%r36, %r34, -2147483648;
	selp.b32 	%r37, %r36, %r34, %p43;
	mov.b64 	%fd73, {%r35, %r37};

$L__BB0_24:
	setp.eq.f32 	%p47, %f25, 0f3F800000;
	selp.f64 	%fd12, 0d3FF0000000000000, %fd73, %p47;
	sub.f32 	%f26, %f21, %f41;
	cvt.f64.f32 	%fd13, %f26;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8}, %fd13;
	}
	abs.f64 	%fd14, %fd13;
	mov.f64 	%fd52, 0d4000000000000000;
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd14;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd52;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd75, [retval0+0];
	} // callseq 1
	setp.lt.s32 	%p48, %r8, 0;
	and.pred  	%p2, %p48, %p25;
	not.pred 	%p50, %p2;
	@%p50 bra 	$L__BB0_26;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r43}, %fd75;
	}
	xor.b32  	%r44, %r43, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r45, %temp}, %fd75;
	}
	mov.b64 	%fd75, {%r45, %r44};

$L__BB0_26:
	setp.eq.f32 	%p51, %f26, 0f00000000;
	@%p51 bra 	$L__BB0_30;
	bra.uni 	$L__BB0_27;

$L__BB0_30:
	selp.b32 	%r46, %r8, 0, %p25;
	mov.u32 	%r47, 0;
	or.b32  	%r48, %r46, 2146435072;
	setp.lt.s32 	%p55, %r5, 0;
	selp.b32 	%r49, %r48, %r46, %p55;
	mov.b64 	%fd75, {%r47, %r49};
	bra.uni 	$L__BB0_31;

$L__BB0_27:
	setp.gt.s32 	%p52, %r8, -1;
	@%p52 bra 	$L__BB0_31;

	mov.f64 	%fd53, 0d4000000000000000;
	cvt.rzi.f64.f64 	%fd54, %fd53;
	setp.eq.f64 	%p53, %fd54, 0d4000000000000000;
	@%p53 bra 	$L__BB0_31;

	mov.f64 	%fd75, 0dFFF8000000000000;

$L__BB0_31:
	add.f64 	%fd20, %fd13, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd20;
	}
	and.b32  	%r51, %r50, 2146435072;
	setp.ne.s32 	%p56, %r51, 2146435072;
	mov.f64 	%fd76, %fd75;
	@%p56 bra 	$L__BB0_37;

	setp.gtu.f64 	%p57, %fd14, 0d7FF0000000000000;
	mov.f64 	%fd76, %fd20;
	@%p57 bra 	$L__BB0_37;

	mov.f64 	%fd56, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r52, %temp}, %fd56;
	}
	and.b32  	%r9, %r5, 2147483647;
	setp.eq.s32 	%p58, %r9, 2146435072;
	setp.eq.s32 	%p59, %r52, 0;
	and.pred  	%p60, %p58, %p59;
	@%p60 bra 	$L__BB0_36;
	bra.uni 	$L__BB0_34;

$L__BB0_36:
	setp.gt.f64 	%p67, %fd14, 0d3FF0000000000000;
	selp.b32 	%r59, 2146435072, 0, %p67;
	mov.u32 	%r60, 0;
	xor.b32  	%r61, %r59, 2146435072;
	setp.lt.s32 	%p68, %r5, 0;
	selp.b32 	%r62, %r61, %r59, %p68;
	setp.eq.f32 	%p69, %f26, 0fBF800000;
	selp.b32 	%r63, 1072693248, %r62, %p69;
	mov.b64 	%fd76, {%r60, %r63};
	bra.uni 	$L__BB0_37;

$L__BB0_34:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r53, %temp}, %fd13;
	}
	and.b32  	%r54, %r8, 2147483647;
	setp.ne.s32 	%p61, %r54, 2146435072;
	setp.ne.s32 	%p62, %r53, 0;
	or.pred  	%p63, %p61, %p62;
	mov.f64 	%fd76, %fd75;
	@%p63 bra 	$L__BB0_37;

	setp.gt.s32 	%p64, %r5, -1;
	selp.b32 	%r55, 2146435072, 0, %p64;
	mov.u32 	%r56, 0;
	setp.ne.s32 	%p65, %r9, 1071644672;
	and.pred  	%p66, %p65, %p2;
	or.b32  	%r57, %r55, -2147483648;
	selp.b32 	%r58, %r57, %r55, %p66;
	mov.b64 	%fd76, {%r56, %r58};

$L__BB0_37:
	setp.eq.f32 	%p70, %f26, 0f3F800000;
	selp.f64 	%fd57, 0d3FF0000000000000, %fd76, %p70;
	add.f64 	%fd24, %fd12, %fd57;
	sub.f32 	%f27, %f22, %f42;
	cvt.f64.f32 	%fd25, %f27;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r10}, %fd25;
	}
	abs.f64 	%fd26, %fd25;
	mov.f64 	%fd58, 0d4000000000000000;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd26;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd58;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd78, [retval0+0];
	} // callseq 2
	setp.lt.s32 	%p71, %r10, 0;
	and.pred  	%p3, %p71, %p25;
	not.pred 	%p73, %p3;
	@%p73 bra 	$L__BB0_39;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r64}, %fd78;
	}
	xor.b32  	%r65, %r64, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r66, %temp}, %fd78;
	}
	mov.b64 	%fd78, {%r66, %r65};

$L__BB0_39:
	setp.eq.f32 	%p74, %f27, 0f00000000;
	@%p74 bra 	$L__BB0_43;
	bra.uni 	$L__BB0_40;

$L__BB0_43:
	selp.b32 	%r67, %r10, 0, %p25;
	mov.u32 	%r68, 0;
	or.b32  	%r69, %r67, 2146435072;
	setp.lt.s32 	%p78, %r5, 0;
	selp.b32 	%r70, %r69, %r67, %p78;
	mov.b64 	%fd78, {%r68, %r70};
	bra.uni 	$L__BB0_44;

$L__BB0_40:
	setp.gt.s32 	%p75, %r10, -1;
	@%p75 bra 	$L__BB0_44;

	mov.f64 	%fd59, 0d4000000000000000;
	cvt.rzi.f64.f64 	%fd60, %fd59;
	setp.eq.f64 	%p76, %fd60, 0d4000000000000000;
	@%p76 bra 	$L__BB0_44;

	mov.f64 	%fd78, 0dFFF8000000000000;

$L__BB0_44:
	add.f64 	%fd32, %fd25, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r71}, %fd32;
	}
	and.b32  	%r72, %r71, 2146435072;
	setp.ne.s32 	%p79, %r72, 2146435072;
	mov.f64 	%fd79, %fd78;
	@%p79 bra 	$L__BB0_50;

	setp.gtu.f64 	%p80, %fd26, 0d7FF0000000000000;
	mov.f64 	%fd79, %fd32;
	@%p80 bra 	$L__BB0_50;

	mov.f64 	%fd62, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r73, %temp}, %fd62;
	}
	and.b32  	%r11, %r5, 2147483647;
	setp.eq.s32 	%p81, %r11, 2146435072;
	setp.eq.s32 	%p82, %r73, 0;
	and.pred  	%p83, %p81, %p82;
	@%p83 bra 	$L__BB0_49;
	bra.uni 	$L__BB0_47;

$L__BB0_49:
	setp.gt.f64 	%p90, %fd26, 0d3FF0000000000000;
	selp.b32 	%r80, 2146435072, 0, %p90;
	mov.u32 	%r81, 0;
	xor.b32  	%r82, %r80, 2146435072;
	setp.lt.s32 	%p91, %r5, 0;
	selp.b32 	%r83, %r82, %r80, %p91;
	setp.eq.f32 	%p92, %f27, 0fBF800000;
	selp.b32 	%r84, 1072693248, %r83, %p92;
	mov.b64 	%fd79, {%r81, %r84};
	bra.uni 	$L__BB0_50;

$L__BB0_47:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r74, %temp}, %fd25;
	}
	and.b32  	%r75, %r10, 2147483647;
	setp.ne.s32 	%p84, %r75, 2146435072;
	setp.ne.s32 	%p85, %r74, 0;
	or.pred  	%p86, %p84, %p85;
	mov.f64 	%fd79, %fd78;
	@%p86 bra 	$L__BB0_50;

	setp.gt.s32 	%p87, %r5, -1;
	selp.b32 	%r76, 2146435072, 0, %p87;
	mov.u32 	%r77, 0;
	setp.ne.s32 	%p88, %r11, 1071644672;
	and.pred  	%p89, %p88, %p3;
	or.b32  	%r78, %r76, -2147483648;
	selp.b32 	%r79, %r78, %r76, %p89;
	mov.b64 	%fd79, {%r77, %r79};

$L__BB0_50:
	setp.eq.f32 	%p93, %f27, 0f3F800000;
	selp.f64 	%fd63, 0d3FF0000000000000, %fd79, %p93;
	add.f64 	%fd64, %fd24, %fd63;
	sqrt.rn.f64 	%fd65, %fd64;
	cvt.rn.f32.f64 	%f28, %fd65;
	setp.leu.f32 	%p94, %f102, %f28;
	@%p94 bra 	$L__BB0_65;

	ld.const.f32 	%f101, [%rd73+8];
	ld.param.f32 	%f100, [resultPixel_param_3];
	ld.const.f32 	%f99, [%rd73+4];
	sub.f32 	%f88, %f100, %f20;
	sub.f32 	%f89, %f44, %f21;
	mul.f32 	%f90, %f99, %f89;
	fma.rn.f32 	%f91, %f14, %f88, %f90;
	sub.f32 	%f92, %f45, %f22;
	fma.rn.f32 	%f29, %f101, %f92, %f91;
	cvt.f64.f32 	%fd36, %f29;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r12}, %fd36;
	}
	mov.f64 	%fd66, 0d3FD3333333333333;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r13}, %fd66;
	}
	and.b32  	%r14, %r13, 2146435072;
	setp.eq.s32 	%p95, %r14, 1127219200;
	abs.f64 	%fd37, %fd36;
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd37;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd66;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd81, [retval0+0];
	} // callseq 3
	setp.lt.s32 	%p96, %r12, 0;
	and.pred  	%p4, %p96, %p95;
	not.pred 	%p97, %p4;
	@%p97 bra 	$L__BB0_53;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r85}, %fd81;
	}
	xor.b32  	%r86, %r85, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r87, %temp}, %fd81;
	}
	mov.b64 	%fd81, {%r87, %r86};

$L__BB0_53:
	setp.eq.f32 	%p98, %f29, 0f00000000;
	@%p98 bra 	$L__BB0_57;
	bra.uni 	$L__BB0_54;

$L__BB0_57:
	selp.b32 	%r88, %r12, 0, %p95;
	mov.u32 	%r89, 0;
	or.b32  	%r90, %r88, 2146435072;
	setp.lt.s32 	%p102, %r13, 0;
	selp.b32 	%r91, %r90, %r88, %p102;
	mov.b64 	%fd81, {%r89, %r91};
	bra.uni 	$L__BB0_58;

$L__BB0_54:
	setp.gt.s32 	%p99, %r12, -1;
	@%p99 bra 	$L__BB0_58;

	mov.f64 	%fd67, 0d3FD3333333333333;
	cvt.rzi.f64.f64 	%fd68, %fd67;
	setp.eq.f64 	%p100, %fd68, 0d3FD3333333333333;
	@%p100 bra 	$L__BB0_58;

	mov.f64 	%fd81, 0dFFF8000000000000;

$L__BB0_58:
	add.f64 	%fd43, %fd36, 0d3FD3333333333333;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r92}, %fd43;
	}
	and.b32  	%r93, %r92, 2146435072;
	setp.ne.s32 	%p103, %r93, 2146435072;
	mov.f64 	%fd82, %fd81;
	@%p103 bra 	$L__BB0_64;

	setp.gtu.f64 	%p104, %fd37, 0d7FF0000000000000;
	mov.f64 	%fd82, %fd43;
	@%p104 bra 	$L__BB0_64;

	mov.f64 	%fd70, 0d3FD3333333333333;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r94, %temp}, %fd70;
	}
	and.b32  	%r15, %r13, 2147483647;
	setp.eq.s32 	%p105, %r15, 2146435072;
	setp.eq.s32 	%p106, %r94, 0;
	and.pred  	%p107, %p105, %p106;
	@%p107 bra 	$L__BB0_63;
	bra.uni 	$L__BB0_61;

$L__BB0_63:
	setp.gt.f64 	%p114, %fd37, 0d3FF0000000000000;
	selp.b32 	%r101, 2146435072, 0, %p114;
	mov.u32 	%r102, 0;
	xor.b32  	%r103, %r101, 2146435072;
	setp.lt.s32 	%p115, %r13, 0;
	selp.b32 	%r104, %r103, %r101, %p115;
	setp.eq.f32 	%p116, %f29, 0fBF800000;
	selp.b32 	%r105, 1072693248, %r104, %p116;
	mov.b64 	%fd82, {%r102, %r105};
	bra.uni 	$L__BB0_64;

$L__BB0_61:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r95, %temp}, %fd36;
	}
	and.b32  	%r96, %r12, 2147483647;
	setp.ne.s32 	%p108, %r96, 2146435072;
	setp.ne.s32 	%p109, %r95, 0;
	or.pred  	%p110, %p108, %p109;
	mov.f64 	%fd82, %fd81;
	@%p110 bra 	$L__BB0_64;

	setp.gt.s32 	%p111, %r13, -1;
	selp.b32 	%r97, 2146435072, 0, %p111;
	mov.u32 	%r98, 0;
	setp.ne.s32 	%p112, %r15, 1071644672;
	and.pred  	%p113, %p112, %p4;
	or.b32  	%r99, %r97, -2147483648;
	selp.b32 	%r100, %r99, %r97, %p113;
	mov.b64 	%fd82, {%r98, %r100};

$L__BB0_64:
	cvt.rn.f32.f64 	%f93, %fd82;
	setp.eq.f32 	%p117, %f29, 0f3F800000;
	selp.f32 	%f94, 0f3F800000, %f93, %p117;
	ld.const.f32 	%f95, [%rd71];
	mul.f32 	%f105, %f95, %f94;
	ld.const.f32 	%f96, [%rd71+4];
	mul.f32 	%f104, %f96, %f94;
	ld.const.f32 	%f97, [%rd71+8];
	mul.f32 	%f103, %f94, %f97;
	mov.f32 	%f102, %f28;

$L__BB0_65:
	cvt.u32.u64 	%r106, %rd8;
	add.s32 	%r107, %r106, 1;
	add.s64 	%rd73, %rd73, 12;
	add.s64 	%rd72, %rd72, 4;
	add.s64 	%rd71, %rd71, 12;
	add.s64 	%rd70, %rd70, 12;
	add.s64 	%rd69, %rd69, 12;
	add.s64 	%rd68, %rd68, 12;
	setp.lt.s32 	%p118, %r107, %r2;
	@%p118 bra 	$L__BB0_3;

$L__BB0_66:
	cvta.to.global.u64 	%rd65, %rd37;
	mul.lo.s64 	%rd66, %rd1, 12;
	add.s64 	%rd67, %rd65, %rd66;
	st.global.f32 	[%rd67], %f105;
	st.global.f32 	[%rd67+4], %f104;
	st.global.f32 	[%rd67+8], %f103;

$L__BB0_67:
	ret;

}
.func  (.param .b64 func_retval0) __internal_accurate_pow(
	.param .b64 __internal_accurate_pow_param_0,
	.param .b64 __internal_accurate_pow_param_1
)
{
	.reg .pred 	%p<10>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<53>;
	.reg .f64 	%fd<138>;


	ld.param.f64 	%fd12, [__internal_accurate_pow_param_0];
	ld.param.f64 	%fd13, [__internal_accurate_pow_param_1];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd12;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd12;
	}
	shr.u32 	%r51, %r50, 20;
	setp.ne.s32 	%p1, %r51, 0;
	@%p1 bra 	$L__BB1_2;

	mul.f64 	%fd14, %fd12, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd14;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd14;
	}
	shr.u32 	%r16, %r50, 20;
	add.s32 	%r51, %r16, -54;

$L__BB1_2:
	add.s32 	%r52, %r51, -1023;
	and.b32  	%r17, %r50, -2146435073;
	or.b32  	%r18, %r17, 1072693248;
	mov.b64 	%fd135, {%r49, %r18};
	setp.lt.u32 	%p2, %r18, 1073127583;
	@%p2 bra 	$L__BB1_4;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r19, %temp}, %fd135;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd135;
	}
	add.s32 	%r21, %r20, -1048576;
	mov.b64 	%fd135, {%r19, %r21};
	add.s32 	%r52, %r51, -1022;

$L__BB1_4:
	add.f64 	%fd15, %fd135, 0d3FF0000000000000;
	mov.f64 	%fd16, 0d3FF0000000000000;
	rcp.approx.ftz.f64 	%fd17, %fd15;
	neg.f64 	%fd18, %fd15;
	fma.rn.f64 	%fd19, %fd18, %fd17, %fd16;
	fma.rn.f64 	%fd20, %fd19, %fd19, %fd19;
	fma.rn.f64 	%fd21, %fd20, %fd17, %fd17;
	add.f64 	%fd22, %fd135, 0dBFF0000000000000;
	mul.f64 	%fd23, %fd22, %fd21;
	fma.rn.f64 	%fd24, %fd22, %fd21, %fd23;
	mul.f64 	%fd25, %fd24, %fd24;
	mov.f64 	%fd26, 0d3ED0F5D241AD3B5A;
	mov.f64 	%fd27, 0d3EB0F5FF7D2CAFE2;
	fma.rn.f64 	%fd28, %fd27, %fd25, %fd26;
	mov.f64 	%fd29, 0d3EF3B20A75488A3F;
	fma.rn.f64 	%fd30, %fd28, %fd25, %fd29;
	mov.f64 	%fd31, 0d3F1745CDE4FAECD5;
	fma.rn.f64 	%fd32, %fd30, %fd25, %fd31;
	mov.f64 	%fd33, 0d3F3C71C7258A578B;
	fma.rn.f64 	%fd34, %fd32, %fd25, %fd33;
	mov.f64 	%fd35, 0d3F6249249242B910;
	fma.rn.f64 	%fd36, %fd34, %fd25, %fd35;
	mov.f64 	%fd37, 0d3F89999999999DFB;
	fma.rn.f64 	%fd38, %fd36, %fd25, %fd37;
	sub.f64 	%fd39, %fd22, %fd24;
	add.f64 	%fd40, %fd39, %fd39;
	neg.f64 	%fd41, %fd24;
	fma.rn.f64 	%fd42, %fd41, %fd22, %fd40;
	mul.f64 	%fd43, %fd21, %fd42;
	fma.rn.f64 	%fd44, %fd25, %fd38, 0d3FB5555555555555;
	mov.f64 	%fd45, 0d3FB5555555555555;
	sub.f64 	%fd46, %fd45, %fd44;
	fma.rn.f64 	%fd47, %fd25, %fd38, %fd46;
	add.f64 	%fd48, %fd47, 0d0000000000000000;
	add.f64 	%fd49, %fd48, 0dBC46A4CB00B9E7B0;
	add.f64 	%fd50, %fd44, %fd49;
	sub.f64 	%fd51, %fd44, %fd50;
	add.f64 	%fd52, %fd49, %fd51;
	mul.rn.f64 	%fd53, %fd24, %fd24;
	neg.f64 	%fd54, %fd53;
	fma.rn.f64 	%fd55, %fd24, %fd24, %fd54;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r22, %temp}, %fd43;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r23}, %fd43;
	}
	add.s32 	%r24, %r23, 1048576;
	mov.b64 	%fd56, {%r22, %r24};
	fma.rn.f64 	%fd57, %fd24, %fd56, %fd55;
	mul.rn.f64 	%fd58, %fd53, %fd24;
	neg.f64 	%fd59, %fd58;
	fma.rn.f64 	%fd60, %fd53, %fd24, %fd59;
	fma.rn.f64 	%fd61, %fd53, %fd43, %fd60;
	fma.rn.f64 	%fd62, %fd57, %fd24, %fd61;
	mul.rn.f64 	%fd63, %fd50, %fd58;
	neg.f64 	%fd64, %fd63;
	fma.rn.f64 	%fd65, %fd50, %fd58, %fd64;
	fma.rn.f64 	%fd66, %fd50, %fd62, %fd65;
	fma.rn.f64 	%fd67, %fd52, %fd58, %fd66;
	add.f64 	%fd68, %fd63, %fd67;
	sub.f64 	%fd69, %fd63, %fd68;
	add.f64 	%fd70, %fd67, %fd69;
	add.f64 	%fd71, %fd24, %fd68;
	sub.f64 	%fd72, %fd24, %fd71;
	add.f64 	%fd73, %fd68, %fd72;
	add.f64 	%fd74, %fd70, %fd73;
	add.f64 	%fd75, %fd43, %fd74;
	add.f64 	%fd76, %fd71, %fd75;
	sub.f64 	%fd77, %fd71, %fd76;
	add.f64 	%fd78, %fd75, %fd77;
	xor.b32  	%r25, %r52, -2147483648;
	mov.u32 	%r26, -2147483648;
	mov.u32 	%r27, 1127219200;
	mov.b64 	%fd79, {%r25, %r27};
	mov.b64 	%fd80, {%r26, %r27};
	sub.f64 	%fd81, %fd79, %fd80;
	mov.f64 	%fd82, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd83, %fd81, %fd82, %fd76;
	neg.f64 	%fd84, %fd81;
	fma.rn.f64 	%fd85, %fd84, %fd82, %fd83;
	sub.f64 	%fd86, %fd85, %fd76;
	sub.f64 	%fd87, %fd78, %fd86;
	mov.f64 	%fd88, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd89, %fd81, %fd88, %fd87;
	add.f64 	%fd90, %fd83, %fd89;
	sub.f64 	%fd91, %fd83, %fd90;
	add.f64 	%fd92, %fd89, %fd91;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r28}, %fd13;
	}
	shl.b32 	%r29, %r28, 1;
	setp.gt.u32 	%p3, %r29, -33554433;
	and.b32  	%r30, %r28, -15728641;
	selp.b32 	%r31, %r30, %r28, %p3;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r32, %temp}, %fd13;
	}
	mov.b64 	%fd93, {%r32, %r31};
	mul.rn.f64 	%fd94, %fd90, %fd93;
	neg.f64 	%fd95, %fd94;
	fma.rn.f64 	%fd96, %fd90, %fd93, %fd95;
	fma.rn.f64 	%fd97, %fd92, %fd93, %fd96;
	add.f64 	%fd4, %fd94, %fd97;
	sub.f64 	%fd98, %fd94, %fd4;
	add.f64 	%fd5, %fd97, %fd98;
	mov.f64 	%fd99, 0d4338000000000000;
	mov.f64 	%fd100, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd101, %fd4, %fd100, %fd99;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r13, %temp}, %fd101;
	}
	mov.f64 	%fd102, 0dC338000000000000;
	add.rn.f64 	%fd103, %fd101, %fd102;
	mov.f64 	%fd104, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd105, %fd103, %fd104, %fd4;
	mov.f64 	%fd106, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd107, %fd103, %fd106, %fd105;
	mov.f64 	%fd108, 0d3E928AF3FCA213EA;
	mov.f64 	%fd109, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd110, %fd109, %fd107, %fd108;
	mov.f64 	%fd111, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd112, %fd110, %fd107, %fd111;
	mov.f64 	%fd113, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd114, %fd112, %fd107, %fd113;
	mov.f64 	%fd115, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd116, %fd114, %fd107, %fd115;
	mov.f64 	%fd117, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd118, %fd116, %fd107, %fd117;
	mov.f64 	%fd119, 0d3F81111111122322;
	fma.rn.f64 	%fd120, %fd118, %fd107, %fd119;
	mov.f64 	%fd121, 0d3FA55555555502A1;
	fma.rn.f64 	%fd122, %fd120, %fd107, %fd121;
	mov.f64 	%fd123, 0d3FC5555555555511;
	fma.rn.f64 	%fd124, %fd122, %fd107, %fd123;
	mov.f64 	%fd125, 0d3FE000000000000B;
	fma.rn.f64 	%fd126, %fd124, %fd107, %fd125;
	fma.rn.f64 	%fd127, %fd126, %fd107, %fd16;
	fma.rn.f64 	%fd128, %fd127, %fd107, %fd16;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r14, %temp}, %fd128;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r15}, %fd128;
	}
	shl.b32 	%r33, %r13, 20;
	add.s32 	%r34, %r15, %r33;
	mov.b64 	%fd136, {%r14, %r34};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r35}, %fd4;
	}
	mov.b32 	%f2, %r35;
	abs.f32 	%f1, %f2;
	setp.lt.f32 	%p4, %f1, 0f4086232B;
	@%p4 bra 	$L__BB1_7;

	setp.lt.f64 	%p5, %fd4, 0d0000000000000000;
	add.f64 	%fd129, %fd4, 0d7FF0000000000000;
	selp.f64 	%fd136, 0d0000000000000000, %fd129, %p5;
	setp.geu.f32 	%p6, %f1, 0f40874800;
	@%p6 bra 	$L__BB1_7;

	mov.f64 	%fd134, 0d4338000000000000;
	mov.f64 	%fd133, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd132, %fd4, %fd133, %fd134;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r48, %temp}, %fd132;
	}
	shr.u32 	%r36, %r48, 31;
	add.s32 	%r37, %r48, %r36;
	shr.s32 	%r38, %r37, 1;
	shl.b32 	%r39, %r38, 20;
	add.s32 	%r40, %r15, %r39;
	mov.b64 	%fd130, {%r14, %r40};
	sub.s32 	%r41, %r48, %r38;
	shl.b32 	%r42, %r41, 20;
	add.s32 	%r43, %r42, 1072693248;
	mov.u32 	%r44, 0;
	mov.b64 	%fd131, {%r44, %r43};
	mul.f64 	%fd136, %fd130, %fd131;

$L__BB1_7:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r45}, %fd136;
	}
	and.b32  	%r46, %r45, 2147483647;
	setp.eq.s32 	%p7, %r46, 2146435072;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r47, %temp}, %fd136;
	}
	setp.eq.s32 	%p8, %r47, 0;
	and.pred  	%p9, %p8, %p7;
	@%p9 bra 	$L__BB1_9;

	fma.rn.f64 	%fd136, %fd136, %fd5, %fd136;

$L__BB1_9:
	st.param.f64 	[func_retval0+0], %fd136;
	ret;

}

